{"version":3,"sources":["Hooks/useStores.ts","shared/UUID.ts","shared/Point.ts","App/Models/document/SocketType.ts","App/Presenters/Factory/Factory.ts","App/Presenters/Socket/Socket.ts","App/Presenters/Machine/Machine.tsx","App/Models/document/MachinePrototype.tsx","App/Models/execution/RecordData.ts","App/predefinedTypeIDs.ts","CorePackage/Math/Addition.tsx","CorePackage/Widgets/NumberLog.tsx","App/Models/document/Package.ts","CorePackage/Widgets/NumericConstant.tsx","Hooks/useContextMenu.tsx","CorePackage/Math/Multiplication.tsx","CorePackage/Math/Root.tsx","CorePackage/Widgets/Slider.tsx","App/Components/Menus/RecordTypePicker.tsx","CorePackage/Core/Constructor.tsx","CorePackage/Core/Destructor.tsx","CorePackage/Widgets/Graph.tsx","CorePackage/Core/Split.tsx","CorePackage/Widgets/Range.tsx","CorePackage/Core/Route.tsx","CorePackage/Logical/Greater.tsx","CorePackage/Widgets/LogicalLog.tsx","CorePackage/Widgets/LogicalConstant.tsx","CorePackage/Widgets/CsvFromFile.tsx","CorePackage/Math/Square.tsx","CorePackage/Core/Sequence/TakeFirst.tsx","CorePackage/Math/Power.tsx","CorePackage/Core/Sequence/Destributor.tsx","CorePackage/Core/Aggregs/Sum.tsx","CorePackage/Core/Aggregs/Avg.tsx","CorePackage/Logical/Lower.tsx","CorePackage/Logical/And.tsx","CorePackage/Logical/Or.tsx","CorePackage/Logical/Not.tsx","CorePackage/Core/Sequence/TakeLast.tsx","AppRoot/stores/AppStore.tsx","themes/dark.ts","AppRoot/stores/ThemeStore.ts","shared/Area.ts","shared/Vector.ts","App/Presenters/Wire/WirePresenter.tsx","App/Presenters/Wire/Wire.ts","App/Presenters/Socket/SocketPresenter.tsx","Hooks/useGlobalTheme.ts","App/Presenters/Machine/Block.tsx","App/Presenters/Machine/MachinePresenter.tsx","App/Components/ContextMenu/ContextMenu.tsx","App/Components/Menus/SmartMenu.tsx","App/Presenters/Factory/FactoryPresenter.tsx","App/Components/BottomMenu/RecordsExplorer.tsx","App/Components/BottomMenu/FactoriesExplorer.tsx","App/Components/Menus/MainMenu.tsx","AppRoot/App.js","Development/serviceWorker.js","index.js"],"names":["useStores","React","useContext","storesContext","UUID","data","this","v4","Empty","Point","x","y","v","xs","ys","px","p","push","Zero","SocketType","Factory","pos","viewOffset","observable","action","Socket","proto","machine","isVirtual","showAnnotation","currentWire","title","slice","id","recordID","typeID","showTypeAnnotation","type","stores","appStore","findRecordTypeByID","Output","computed","Machine","cache","waitsForData","color","state","Object","assign","initShape","sockets","map","dynamicSockets","Generate","predicate","wires","filter","w","removeWire","console","log","unresolvedDepsQ","depsWires","toSocket","inputs","dep","fromSocket","length","some","execute","isPerSetInvocable","res","indexes","paramsCount","lengths","maxQ","Math","max","includes","i","set","undefined","paramVal","invokePerSet","out","invoke","consumers","machinesFilled","wire","val","propTo","m","newPos","position","MachinePrototype","content","self","toolstrip","params","RecordData","t","value","recordType","any","bool","FromString","number","AdditionMachine","predefinedTypeIDs","Input","name","numT","NumberLog","vals","LogContainer","LogRecord","toFixed","styled","div","Package","NumericConstant","isInvocable","InputField","onMouseDown","ev","stopPropagation","onChange","target","findRecordTypeByName","input","ContextMenuState","MultiplicationMachine","RootMachine","pow","Slider","a","min","step","changeVal","ValueWrap","RecordTypePicker","recordIDChanged","useState","isVisible","setIsVisible","pkg","currentPackage","setRecordType","useObserver","TypeTitle","Card","CloseButton","onClick","records","r","RecordItem","loadedPackages","Constructor","predefinedUUID","detachWires","fields","fld","changeType","TypeWrapper","Destructor","ChangeType","pred","Graph","values","minX","minY","maxY","maxX","ref","useRef","useEffect","ctx","current","getContext","rangeX","abs","strokeStyle","beginPath","Number","MAX_VALUE","forEach","e","MIN_VALUE","rangeY","moveTo","lineTo","stroke","clearRect","GraphContainer","GraphCanvas","width","height","len","canvas","theme","strain","border","Split","style","transform","size","connectedCount","isDocked","Range","from","to","display","alignItems","flexDirection","Inp","sign","Route","Greater","LogicalLog","checked","LogicalConstant","CsvFromFile","rows","columns","SetData","source","split","l","row","flat","Container","files","item","text","SquareMachine","TakeFirst","sets","entriesN","PowerMachine","Destributor","SummatorMachine","sum","AveragerMachine","Lower","And","Or","Not","TakeLast","n","AppStore","inst","setPosition","sub","currentFactory","instances","fromWires","splice","indexOf","toWires","find","toString","JSON","stringify","math","factories","machinePrototypes","buildinRepresentation","defaultValue","isRenames","editable","flow","logical","output","background","borderRadius","dock","ThemeStore","newTheme","currentTheme","dark","Area","b","Vector","dockSize","fromPoint","getPositionAction","toPoint","crossArea","betweenPoints","startVector","endVector","yxRatio","horizontalDif","curvatureRatio","tanh","sqrt","supportLineRatio","startTarget","mul","plus","endTarget","components","leftTopBound","rightBottomBound","splainArea","transition","offsetY","offsetX","cursor","zIndex","viewBox","d","stroke-dasharray","strokeWidth","stroke-linecap","fill","RenderLeftDock","RenderRightDock","Wire","isHover","setIsHover","factory","themeStore","CapturePosition","rect","getBoundingClientRect","vPos","isLinkable","window","addEventListener","TrackMouseMove","EndLinking","removeEventListener","MouseEnter","linkerWire","MouseLeave","TryMakeWire","real","onWireConnected","TryBeginLinking","button","virtualSocket","persist","clientX","clientY","setter","DockContainer","children","left","right","onMouseUp","paddingTop","xmlns","categoryColor","Label","marginRight","backgroundColor","LabelTypeAnnotation","onMouseEnter","onMouseLeave","marginLeft","BlockPresenter","dragOffset","setDragOffset","isDrag","setIsDrag","OnGlobalMouseUp","OnMouseDown","mEvent","OnGlobalMouseMove","barStyle","BlockContainer","TopBar","DocksContainer","BottomBar","ToolStripContainer","removeInstance","Bar","Spacer","flex","allSockets","inputSockets","outputSockets","DocksLine","SocketPresenter","key","paddingBottom","ContentContainer","ContextMenu","Content","Activator","setPos","top","setVisible","menuPos","MenuContainer","MenuBackground","SmartMenu","selectedPackage","setSelectedPackage","CategoriesContainer","CategoryWrapper","CategoryItem","RenderIcon","MachinesList","MachinesListItem","createInstance","viewDragOffset","setViewDragOffset","isViewDrag","setIsViewDrag","setViewOffset","show","onDragOver","preventDefault","onContextMenu","overflow","backgroundPosition","MovingContainer","StrainContainer","MachinePresenter","WirePresenter","RecordsExplorer","props","CreateRecord","RenderRecord","Record","RecordRenameField","paddingLeft","RecordTitle","RenderField","Field","autoFocus","paddingRight","Title","RecordsContainer","RecordGroup","f","store","makeInspectable","createContext","PanelContainer","BottomPanel","AppContainer","Boolean","location","hostname","match","gamepad","index","buttons","axes","ReactDOM","render","initValues","initDefaultPackages","FactoryPresenter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.07c79fb9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {storesContext} from \"../AppRoot/App\";\r\n\r\nexport const useStores = (() => React.useContext(storesContext));\r\n","import {v4} from \"uuid\";\r\n\r\nexport default class UUID {\r\n  static Empty = new UUID(\"\");\r\n  private data: string;\r\n\r\n  private constructor(data: string) {\r\n    this.data = data;\r\n  }\r\n\r\n  static Generate(): UUID {\r\n    return new UUID(v4());\r\n  }\r\n\r\n  static FromString(data: string) {\r\n    return new UUID(data);\r\n  }\r\n\r\n  toString() {\r\n    return this.data\r\n  }\r\n}\r\n","export default class Point {\r\n  static Zero: Point = new Point(0, 0);\r\n  x: number;\r\n  y: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  static components(...px: Point[]) {\r\n    const xs = [];\r\n    const ys = [];\r\n    for (var p of px) {\r\n      xs.push(p.x);\r\n      ys.push(p.y);\r\n    }\r\n    return [xs, ys];\r\n  }\r\n\r\n  plus(v: Point) {\r\n    return new Point(this.x + v.x, this.y + v.y);\r\n  }\r\n\r\n  sub(v: Point) {\r\n    return new Point(this.x - v.x, this.y - v.y);\r\n  }\r\n}\r\n","enum SocketType {\r\n    Input, Output\r\n}\r\n\r\nexport default SocketType\r\n","import Point from \"../../../shared/Point\";\r\nimport { action, observable } from \"mobx\";\r\nimport Wire from \"../Wire/Wire\";\r\nimport Machine from \"../Machine/Machine\";\r\n\r\nexport default class Factory {\r\n  @observable instances: Machine<any>[] = [];\r\n  @observable linkerWire: Wire | null = null;\r\n  @observable viewOffset: Point = Point.Zero;\r\n\r\n  @observable warps: Machine<any>[] = [];\r\n\r\n  @action setViewOffset(pos: Point) {\r\n    this.viewOffset = pos;\r\n  }\r\n}\r\n","import SocketType from \"../../Models/document/SocketType\";\r\nimport Point from \"../../../shared/Point\";\r\nimport { observable, computed } from \"mobx\";\r\nimport SocketPrototype from \"../../Models/document/SocketPrototype\";\r\nimport Machine from \"../Machine/Machine\";\r\nimport RecordType from \"../../Models/document/RecordType\";\r\nimport { useStores } from \"../../../Hooks/useStores\";\r\nimport Package from \"../../Models/document/Package\";\r\nimport AppStore from \"../../../AppRoot/stores/AppStore\";\r\nimport Wire from \"../Wire/Wire\";\r\nimport UUID from \"../../../shared/UUID\";\r\nimport { storesContext, stores } from \"../../../AppRoot/App\";\r\n\r\nexport default class Socket {\r\n  @observable title: string = \"\";\r\n  @observable machine: Machine<any>;\r\n  @observable id: number = 0;\r\n  @observable type: SocketType = SocketType.Output;\r\n  @observable isDocked: boolean = false;\r\n  @observable recordID: UUID = UUID.Empty;\r\n\r\n  showAnnotation = false;\r\n\r\n  @computed\r\n  get recordType() {\r\n    const { appStore } = stores;\r\n    const rec = appStore.findRecordTypeByID(this.recordID);\r\n    return rec;\r\n  }\r\n\r\n  currentWire: Wire | null = null;\r\n  isVirtual: boolean = false;\r\n\r\n  constructor(\r\n    proto: SocketPrototype,\r\n    machine: Machine<any>,\r\n    isVirtual = false\r\n  ) {\r\n    this.title = proto.title.slice();\r\n    this.id = proto.id;\r\n    this.recordID = proto.typeID;\r\n    this.showAnnotation = proto.showTypeAnnotation;\r\n    this.isVirtual = isVirtual;\r\n    this.type = proto.type;\r\n    this.machine = machine;\r\n  }\r\n\r\n  @observable getPositionAction: () => Point = () => Point.Zero;\r\n}\r\n","import React from \"react\";\r\nimport { action, computed, observable, reaction } from \"mobx\";\r\nimport Socket from \"../Socket/Socket\";\r\nimport { useStores } from \"../../../Hooks/useStores\";\r\nimport Point from \"../../../shared/Point\";\r\nimport UUID from \"../../../shared/UUID\";\r\nimport SocketPrototype from \"../../Models/document/SocketPrototype\";\r\nimport MachinePrototype from \"../../Models/document/MachinePrototype\";\r\nimport Wire from \"../Wire/Wire\";\r\nimport AppStore from \"../../../AppRoot/stores/AppStore\";\r\nimport { stores } from \"../../../AppRoot/App\";\r\nimport RecordData from \"../../Models/execution/RecordData\";\r\n\r\nexport default class Machine<StateT> {\r\n  @observable id: UUID = UUID.Empty;\r\n  @observable position: Point = Point.Zero;\r\n  @observable sockets: Socket[] = [];\r\n  @observable dynamicSockets: Socket[] = [];\r\n  @observable proto: MachinePrototype<StateT>;\r\n  @observable wires: Wire[] = [];\r\n  @observable state: StateT;\r\n\r\n  cache: RecordData[][] | null = null;\r\n  waitsForData = false;\r\n\r\n  color: string = \"black\";\r\n\r\n  detachWires(predicate: (wire: Wire) => boolean = () => true) {\r\n    for (var w of this.wires.filter(predicate)) stores.appStore.removeWire(w);\r\n  }\r\n\r\n  async execute() {\r\n    console.log(\"consume start\", this.proto.title);\r\n\r\n    const unresolvedDepsQ = [];\r\n    const depsWires = this.wires.filter((p) => p.toSocket?.machine === this);\r\n\r\n    const inputs = [] as RecordData[][];\r\n\r\n    for (var dep of depsWires) {\r\n      const data = dep.data;\r\n      if (!data) {\r\n        unresolvedDepsQ.push(dep.fromSocket?.machine);\r\n      }\r\n    }\r\n\r\n    this.cache = null;\r\n\r\n    //if (!selfReq) this.isConsumationPending = false;\r\n\r\n    if (unresolvedDepsQ.length) {\r\n      this.waitsForData = true;\r\n\r\n      if (unresolvedDepsQ.some((p) => p?.waitsForData)) {\r\n        this.waitsForData = false;\r\n        return;\r\n      }\r\n\r\n      for (const dep of unresolvedDepsQ)\r\n        if (!this.cache) {\r\n          await dep?.execute();\r\n        }\r\n      this.waitsForData = false;\r\n    }\r\n\r\n    for (var dep of depsWires) {\r\n      inputs.push(dep.data!);\r\n      dep.data = null;\r\n    }\r\n\r\n    let res: RecordData[][];\r\n    if (this.proto.isPerSetInvocable) {\r\n      res = [];\r\n\r\n      const indexes = inputs.map((p) => 0);\r\n\r\n      const paramsCount = inputs.length;\r\n      const lengths = inputs.map((v) => v.length);\r\n      const maxQ = Math.max(...lengths);\r\n\r\n      if (!lengths.includes(0)) {\r\n        for (let i = 0; i < maxQ; i++) {\r\n          let set = [];\r\n          for (let i = 0; i < paramsCount; i++) {\r\n            let paramVal = inputs[i][indexes[i]];\r\n            if (paramVal == undefined) {\r\n              paramVal = inputs[i][0];\r\n              indexes[i] = 1;\r\n            }\r\n            indexes[i]++;\r\n            set.push(paramVal);\r\n          }\r\n          const out = await this.proto.invokePerSet(this, set);\r\n          if (!res.length) res = out.map((p) => []);\r\n          for (let i = 0; i < out.length; i++) if (out[i]) res[i].push(out[i]!);\r\n        }\r\n      }\r\n    } else {\r\n      res = await this.proto.invoke(this, inputs);\r\n    }\r\n\r\n    this.cache = res;\r\n\r\n    const consumers = this.wires.filter((p) => p.fromSocket?.machine === this);\r\n\r\n    const machinesFilled = [] as Machine<any>[];\r\n    let i = 0;\r\n\r\n    /*  const rays = new Set<UUID>(); */\r\n    /*  for (var wire of consumers) { */\r\n    /*    wire.rays.forEach((r) => rays.add(r)); */\r\n    /*  } */\r\n    /*  if (rays.size === 0) rays.add(UUID.Generate()); */\r\n\r\n    for (var wire of consumers) {\r\n      const val = this.cache![wire.fromSocket!.id];\r\n      if (wire.data && wire.data.length) continue;\r\n      wire.data = val;\r\n      if (!val.length) continue;\r\n\r\n      /*  wire.rays = rays; */\r\n\r\n      const propTo = wire.toSocket?.machine!;\r\n      if (\r\n        !wire.toSocket?.machine.waitsForData &&\r\n        wire.data &&\r\n        !machinesFilled.includes(propTo)\r\n      )\r\n        machinesFilled.push(propTo);\r\n    }\r\n    for (const m of machinesFilled) await m.execute();\r\n  }\r\n\r\n  constructor(proto: MachinePrototype<StateT>, appStore: AppStore) {\r\n    this.proto = proto;\r\n    this.state = Object.assign({}, proto.initShape);\r\n    this.sockets = proto.sockets.map((p) => new Socket(p, this));\r\n    this.dynamicSockets = [];\r\n    this.id = UUID.Generate();\r\n  }\r\n\r\n  @action\r\n  setPosition(newPos: Point) {\r\n    this.position = newPos;\r\n  }\r\n}\r\n","import UUID from \"../../../shared/UUID\";\r\nimport SocketPrototype from \"./SocketPrototype\";\r\nimport { action, observable } from \"mobx\";\r\nimport Point from \"../../../shared/Point\";\r\nimport React from \"react\";\r\nimport Machine from \"../../Presenters/Machine/Machine\";\r\nimport RecordData from \"../execution/RecordData\";\r\nimport Wire from \"../../Presenters/Wire/Wire\";\r\nimport AppStore from \"../../../AppRoot/stores/AppStore\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default class MachinePrototype<StateT> {\r\n  @observable id: UUID = UUID.Empty;\r\n  @observable name: string = \"\";\r\n  @observable title: string = \"\";\r\n  @observable position: Point = Point.Zero;\r\n  @observable sockets: SocketPrototype[] = [];\r\n  @observable isInvocable = true;\r\n  @observable isPerSetInvocable = false;\r\n\r\n  initShape: StateT | null = null;\r\n\r\n  async invoke(\r\n    self: Machine<StateT>,\r\n    params: RecordData[][]\r\n  ): Promise<(RecordData)[][]> {\r\n    return [[]];\r\n  }\r\n\r\n  async invokePerSet(\r\n    self: Machine<StateT>,\r\n    set: RecordData[]\r\n  ): Promise<(RecordData | null)[]> {\r\n    return [];\r\n  }\r\n\r\n  onWireConnected(self: Machine<StateT>, wire: Wire) {}\r\n\r\n  content: (self: Machine<StateT>, appStore: AppStore) => any = (self) => <></>;\r\n\r\n  toolstrip: (self: Machine<StateT>) => any = (self) => <></>;\r\n\r\n  @action\r\n  setPosition(newPos: Point) {\r\n    this.position = newPos;\r\n  }\r\n}\r\n","import RecordType from \"../document/RecordType\";\r\nimport UUID from \"../../../shared/UUID\";\r\nimport { observable, computed } from \"mobx\";\r\nimport { useStores } from \"../../../Hooks/useStores\";\r\n\r\nexport default class RecordData {\r\n  @observable value: any;\r\n  @observable fields: RecordData[] = [];\r\n  @observable recordType: RecordType | null =  null;\r\n\r\n  constructor(t: RecordType, value: any) {\r\n    this.recordType = t;\r\n    this.value = value;\r\n  }\r\n}\r\n","import UUID from \"../shared/UUID\";\r\n\r\nexport default {\r\n  any: UUID.Empty,\r\n  bool: UUID.FromString(\"0b9d4a45-eb15-460e-8d4a-e2d1b77d1834\"),\r\n  number: UUID.FromString(\"0b9d4a45-eb15-460e-8d4a-ecd1b77d1834\"),\r\n};\r\n","import React from \"react\";\r\nimport AddIcon from \"mdi-react/AddIcon\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\nexport default class AdditionMachine extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"A\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"B\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"A+B\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"as5eb614-a1ee-4382-9b09-c4a5e9c296a7\");\r\n  name = \"Сложить\";\r\n  title = \"Сложить\";\r\n  isPerSetInvocable = true;\r\n\r\n  async invokePerSet(self: Machine<any>, set: RecordData[]) {\r\n    var numT = set[0].recordType!;\r\n    return [new RecordData(numT, set[0].value + set[1].value)];\r\n  }\r\n}\r\n","import SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport PlayIcon from \"mdi-react/PlayIcon\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport { values } from \"mobx\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\ninterface State {\r\n  vals: number[];\r\n}\r\n\r\nexport default class NumberLog extends MachinePrototype<State> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"c8941786-aaf1-4f57-b0a6-144a5a825ff8\");\r\n  name = \"Числовой вывод\";\r\n  title = \"Числовой вывод\";\r\n\r\n  initShape = { vals: [] };\r\n\r\n  async invoke(self: Machine<State>, params: RecordData[][]) {\r\n    self.state.vals = params[0].map((p) => p.value);\r\n    return [[]];\r\n  }\r\n\r\n  content = (self: Machine<State>) => (\r\n    <LogContainer>\r\n      {self.state.vals.map((p) => (\r\n        <LogRecord>{p.toFixed(2)}</LogRecord>\r\n      ))}\r\n    </LogContainer>\r\n  );\r\n}\r\n\r\nconst LogContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: 80px;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst LogRecord = styled.div`\r\n  color: white;\r\n  font-family: Consolas;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  width: 60px;\r\n`;\r\n","import Factory from \"../../Presenters/Factory/Factory\";\r\nimport { observable } from \"mobx\";\r\nimport RecordType from \"./RecordType\";\r\nimport Machine from \"../../Presenters/Machine/Machine\";\r\nimport MachinePrototype from \"./MachinePrototype\";\r\n\r\nexport default class Package {\r\n  @observable factories: Factory[] = [];\r\n  @observable machinePrototypes: MachinePrototype<any>[] = [];\r\n  @observable records: RecordType[] = [];\r\n\r\n  @observable name: string = \"Untitled package\";\r\n  @observable color: string = \"gray\";\r\n}\r\n","import React from \"react\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport styled from \"styled-components\";\r\nimport RecordTypePicker from \"../../App/Components/Menus/RecordTypePicker\";\r\nimport RecordType from \"../../App/Models/document/RecordType\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport AppStore from \"../../AppRoot/stores/AppStore\";\r\nimport { useStores } from \"../../Hooks/useStores\";\r\nimport { stores } from \"../../AppRoot/App\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\ninterface State {\r\n  value: number;\r\n}\r\n\r\nexport default class NumericConstant extends MachinePrototype<State> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Output,\r\n      isVirtual: false,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"9bb9b32c-076b-4110-9ca2-a8a7e09cb295\");\r\n  name = \"Число\";\r\n  title = \"\";\r\n  isInvocable = false;\r\n\r\n  initShape = { value: 0 };\r\n\r\n  async invoke(self: Machine<any>, params: RecordData[][]) {\r\n    return [\r\n      [\r\n        new RecordData(\r\n          stores.appStore.findRecordTypeByName(\"Число\")!,\r\n          self.state.value\r\n        ),\r\n      ],\r\n    ]; // TODO\r\n  }\r\n\r\n  content = (self: Machine<State>) => {\r\n    return (\r\n      <>\r\n        <InputField\r\n          onMouseDown={(ev) => ev.stopPropagation()}\r\n          value={self.state.value}\r\n          onChange={(ev) => {\r\n            self.state.value = +ev.target.value;\r\n            self.cache = null;\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n}\r\n\r\nconst TypeWrapper = styled.div`\r\n  padding: 4px 12px;\r\n  margin: 4px;\r\n  border-radius: 20px;\r\n  border: 1px solid gray;\r\n  color: White;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n  width: 60px;\r\n  position: relative;\r\n  background-color: transparent;\r\n  border: gray 1px solid;\r\n  margin: 4px 0 4px 0;\r\n  padding: 2px 4px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  text-align: right;\r\n`;\r\n","import ContextMenuContentProps from \"../App/Components/ContextMenu/ContextMenuContentProps\";\r\nimport Point from \"../shared/Point\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useStores } from \"./useStores\";\r\nimport { observable } from \"mobx\";\r\n\r\nexport class ContextMenuState {\r\n  @observable isContextVisible = false;\r\n  @observable contextPosition = Point.Zero;\r\n  @observable renderFunc: any;\r\n}\r\n\r\nexport default function useContextMenu() {\r\n  const context = useStores().appStore.contextMenu;\r\n  const [content, setContent] = useState(null);\r\n  return {\r\n    useActivator(child: React.ReactNode) {\r\n      /*  context.renderFunc = child; */\r\n      /*  context.isContextVisible = true; */\r\n      return <div onClick={() => console.log(\"activated\")}>{child}</div>;\r\n    },\r\n    useContent(child: React.ReactNode) {\r\n      return;\r\n    },\r\n  };\r\n}\r\n\r\nexport function ContextMenuPresenter({\r\n  context,\r\n}: {\r\n  context: ContextMenuState;\r\n}) {\r\n  return (\r\n    <>\r\n      {/* {context.renderFunc}\r\n      {context.isContextVisible ? (\r\n        <MenuBackground onClick={(ev) => (context.isContextVisible = false)}>\r\n          <MenuContainer\r\n            onClick={(ev) => {\r\n              ev.stopPropagation();\r\n            }}\r\n            style={{\r\n              top: `${context.contextPosition.y}px`,\r\n              left: `${context.contextPosition.x}px`,\r\n            }}\r\n          >\r\n            {}\r\n          </MenuContainer>\r\n        </MenuBackground>\r\n      ) : null} */}\r\n    </>\r\n  );\r\n}\r\n\r\nconst MenuContainer = styled.div`\r\n  position: absolute;\r\n`;\r\n\r\nconst MenuBackground = styled.div`\r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  left: 0;\r\n  top: 0;\r\n`;\r\n","import React from \"react\";\r\nimport AddIcon from \"mdi-react/AddIcon\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport RecordType from \"../../App/Models/document/RecordType\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\nexport default class MultiplicationMachine extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"A\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"B\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"A*B\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"431007ea-7593-4745-b7a8-08f2b92f45cf\");\r\n  name = \"Умножить\";\r\n  title = \"\";\r\n  isPerSetInvocable = true;\r\n\r\n  async invokePerSet(self: Machine<any>, set: RecordData[]) {\r\n    var numT = set[0].recordType!;\r\n    return [new RecordData(numT, set[0].value * set[1].value)];\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport AddIcon from \"mdi-react/AddIcon\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\nexport default class RootMachine extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"X\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"n\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"n√X\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"91d2ee8e-31e9-423d-b7b0-2dc5005a4712\");\r\n  name = \"Получить корень в степени\";\r\n  title = \"\";\r\n  isPerSetInvocable = true;\r\n\r\n  async invoke(self: Machine<any>, params: RecordData[][]) {\r\n    var numT = params[0][0].recordType!;\r\n    return params.map((p) => {\r\n      return [new RecordData(numT!, Math.pow(p[0].value, 1 / p[1].value))];\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport styled from \"styled-components\";\r\nimport RecordTypePicker from \"../../App/Components/Menus/RecordTypePicker\";\r\nimport RecordType from \"../../App/Models/document/RecordType\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\ninterface State {\r\n  value: number;\r\n}\r\n\r\nexport default class Slider extends MachinePrototype<State> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"ff0d3a76-3727-45ad-b3d5-cc4f703b1c58\");\r\n  name = \"Ползунок\";\r\n  title = \"\";\r\n  isInvocable = false;\r\n\r\n  initShape = { value: 0 };\r\n\r\n  async invoke(self: Machine<any>, params: RecordData[][]) {\r\n    return [[new RecordData(self.sockets[0].recordType!, self.state.value)]]; // TODO\r\n  }\r\n\r\n  content = (self: Machine<State>) => {\r\n    async function changeVal(val: number) {\r\n      self.state.value = val;\r\n      self.cache = null;\r\n      self.execute();\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <input\r\n          max={1}\r\n          min={0}\r\n          step={0.01}\r\n          onMouseDown={(ev) => ev.stopPropagation()}\r\n          value={self.state.value}\r\n          onChange={(ev) => changeVal(+ev.target.value)}\r\n          type={\"range\"}\r\n        />\r\n        <ValueWrap>{self.state.value}</ValueWrap>\r\n      </>\r\n    );\r\n  };\r\n}\r\n\r\nconst ValueWrap = styled.div`\r\n  color: white;\r\n  padding: 4px;\r\n  width: 30px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useStores } from \"../../../Hooks/useStores\";\r\nimport ContextMenuContentProps from \"../ContextMenu/ContextMenuContentProps\";\r\nimport RecordType from \"../../Models/document/RecordType\";\r\nimport ContextMenu from \"../ContextMenu/ContextMenu\";\r\nimport Point from \"../../../shared/Point\";\r\nimport UUID from \"../../../shared/UUID\";\r\nimport { useObserver } from \"mobx-react-lite\";\r\n\r\nexport default function RecordTypePicker({\r\n  recordID,\r\n  recordIDChanged,\r\n}: {\r\n  recordID: UUID;\r\n  recordIDChanged: (record: UUID) => void;\r\n}) {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const { appStore } = useStores();\r\n  const pkg = appStore.currentPackage;\r\n\r\n  const [recordType, setRecordType] = useState(\r\n    appStore.findRecordTypeByID(recordID)\r\n  );\r\n  console.log(recordID)\r\n\r\n  return useObserver(() => (\r\n    <>\r\n      <TypeTitle onMouseDown={(ev) => setIsVisible(true)}>\r\n        {recordType ? recordType.name : \"Не выбрано\"}\r\n      </TypeTitle>\r\n      {isVisible ? (\r\n        <Card onMouseDown={(ev) => ev.stopPropagation()}>\r\n          <CloseButton onClick={() => setIsVisible(false)}>Скрыть</CloseButton>\r\n          {pkg.records.map((r) => (\r\n            <RecordItem\r\n              onClick={() => {\r\n                recordIDChanged(r.id);\r\n                setRecordType(r);\r\n                setIsVisible(false);\r\n              }}\r\n            >\r\n              {r.name}\r\n            </RecordItem>\r\n          ))}\r\n          {appStore.loadedPackages.map((p) =>\r\n            p.records.map((r) => (\r\n              <RecordItem\r\n                onClick={() => {\r\n                  recordIDChanged(r.id);\r\n                  setRecordType(r);\r\n                  setIsVisible(false);\r\n                }}\r\n              >\r\n                {r.name}\r\n              </RecordItem>\r\n            ))\r\n          )}\r\n        </Card>\r\n      ) : null}\r\n    </>\r\n  ));\r\n}\r\n\r\nconst TypeTitle = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst CloseButton = styled.div`\r\n  width: 100%;\r\n  height: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid gray;\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: #ffffff22;\r\n  }\r\n`;\r\n\r\nconst RecordItem = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  padding-left: 8px;\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: #ffffff22;\r\n  }\r\n`;\r\n\r\nconst Card = styled.div`\r\n  min-width: 200px;\r\n  min-height: 200px;\r\n  background-color: #14151b;\r\n  border-radius: 4px;\r\n  position: absolute;\r\n  z-index: 5;\r\n  color: white;\r\n  font-family: Arial;\r\n`;\r\n","import React from \"react\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport styled from \"styled-components\";\r\nimport RecordTypePicker from \"../../App/Components/Menus/RecordTypePicker\";\r\nimport RecordType, { RecordField } from \"../../App/Models/document/RecordType\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport Wire from \"../../App/Presenters/Wire/Wire\";\r\nimport Socket from \"../../App/Presenters/Socket/Socket\";\r\nimport AppStore from \"../../AppRoot/stores/AppStore\";\r\nimport { useStores } from \"../../Hooks/useStores\";\r\nimport predefinedUUID from \"../../App/predefinedTypeIDs\";\r\nimport { stores } from \"../../AppRoot/App\";\r\n\r\ninterface State {\r\n  typeID: UUID;\r\n}\r\n\r\nexport default class Constructor extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedUUID.any,\r\n      type: SocketType.Output,\r\n      isVirtual: false,\r\n      showTypeAnnotation: false,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"f63ca30a-fb15-482d-bfc8-254168325b32\");\r\n  name = \"Конструктор\";\r\n  title = \"Сконструировать\";\r\n  isPerSetInvocable = true;\r\n\r\n  initShape = { type: UUID.Empty };\r\n\r\n  async invokePerSet(self: Machine<any>, params: RecordData[]) {\r\n    const t = stores.appStore.findRecordTypeByID(self.state.type)!;\r\n    const out = new RecordData(t, null);\r\n    out.fields = params;\r\n    return [out];\r\n  }\r\n\r\n  onWireConnected(self: Machine<any>, wire: Wire) {}\r\n\r\n  content = (self: Machine<any>, appStore: AppStore) => {\r\n    const changeType = (t: UUID) => {\r\n      self.state.type = t;\r\n\r\n      self.detachWires();\r\n\r\n      self.state.type = t;\r\n      self.sockets[0].recordID = t;\r\n      self.dynamicSockets = [];\r\n      let i = 0;\r\n      for (var fld of self.sockets[0].recordType!.fields) {\r\n        self.dynamicSockets.push(\r\n          new Socket(\r\n            {\r\n              type: SocketType.Input,\r\n              title: fld.name,\r\n              typeID: fld.typeID,\r\n              id: i++,\r\n              showTypeAnnotation: true,\r\n            },\r\n            self\r\n          )\r\n        );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <TypeWrapper>\r\n          <RecordTypePicker\r\n            recordID={self.state.type}\r\n            recordIDChanged={(id) => changeType(id)}\r\n          />\r\n        </TypeWrapper>\r\n      </>\r\n    );\r\n  };\r\n}\r\n\r\nconst TypeWrapper = styled.div`\r\n  padding: 4px 12px;\r\n  margin: 4px;\r\n  border-radius: 20px;\r\n  border: 1px solid gray;\r\n  color: White;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n  width: 60px;\r\n  position: relative;\r\n  background-color: transparent;\r\n  border: gray 1px solid;\r\n  margin: 4px 0 4px 0;\r\n  padding: 2px 4px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  text-align: right;\r\n`;\r\n","import React from \"react\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport styled from \"styled-components\";\r\nimport RecordTypePicker from \"../../App/Components/Menus/RecordTypePicker\";\r\nimport RecordType from \"../../App/Models/document/RecordType\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport Wire from \"../../App/Presenters/Wire/Wire\";\r\nimport AppStore from \"../../AppRoot/stores/AppStore\";\r\nimport Socket from \"../../App/Presenters/Socket/Socket\";\r\nimport { stores } from \"../../AppRoot/App\";\r\nimport { useObserver } from \"mobx-react-lite\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\ninterface State {\r\n  typeID: UUID;\r\n}\r\n\r\nexport default class Destructor extends MachinePrototype<State> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.any,\r\n      type: SocketType.Input,\r\n      isVirtual: false,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"исходный\",\r\n      typeID: predefinedTypeIDs.any,\r\n      type: SocketType.Output,\r\n      isVirtual: false,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"f62ca30a-fb15-482d-bfc8-254168325b32\");\r\n  name = \"Деструктор\";\r\n  title = \"Разобрать\";\r\n  isInvocable = false;\r\n  isPerSetInvocable = true;\r\n\r\n  initShape = { typeID: UUID.Empty };\r\n\r\n  async invokePerSet(self: Machine<any>, params: RecordData[]) {\r\n    return [params[0], ...params[0].fields];\r\n  }\r\n\r\n  onWireConnected(self: Machine<any>, wire: Wire) {\r\n    const t = wire.fromSocket?.recordType;\r\n    if (wire.toSocket === self.sockets[0])\r\n      this.ChangeType(self, t!.id, (w) => w !== wire);\r\n  }\r\n\r\n  ChangeType(self: Machine<State>, id: UUID, pred: (w: Wire) => boolean) {\r\n    self.detachWires(pred);\r\n\r\n    self.state.typeID = id;\r\n    self.sockets[0].recordID = id;\r\n    self.sockets[1].recordID = id;\r\n    self.dynamicSockets = [];\r\n    let i = 1;\r\n    for (var fld of stores.appStore.findRecordTypeByID(id)!.fields) {\r\n      self.dynamicSockets.push(\r\n        new Socket(\r\n          {\r\n            type: SocketType.Output,\r\n            title: fld.name,\r\n            typeID: fld!.typeID,\r\n            id: i++,\r\n            showTypeAnnotation: true,\r\n          },\r\n          self\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  content = (self: Machine<State>) => {\r\n    return useObserver(() => (\r\n      <>\r\n        <TypeWrapper>\r\n          <RecordTypePicker\r\n            recordID={self.state.typeID}\r\n            recordIDChanged={(id) => this.ChangeType(self, id, (w) => true)}\r\n          />\r\n        </TypeWrapper>\r\n      </>\r\n    ));\r\n  };\r\n}\r\n\r\nconst TypeWrapper = styled.div`\r\n  padding: 4px 12px;\r\n  margin: 4px;\r\n  border-radius: 20px;\r\n  border: 1px solid gray;\r\n  color: White;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n  width: 60px;\r\n  position: relative;\r\n  background-color: transparent;\r\n  border: gray 1px solid;\r\n  margin: 4px 0 4px 0;\r\n  padding: 2px 4px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  text-align: right;\r\n`;\r\n","import SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport PlayIcon from \"mdi-react/PlayIcon\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport { values } from \"mobx\";\r\nimport Point from \"../../shared/Point\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\nimport { useObserver } from \"mobx-react-lite\";\r\n\r\ninterface State {\r\n  values: Point[];\r\n  maxX: number;\r\n  maxY: number;\r\n  minX: number;\r\n  minY: number;\r\n}\r\n\r\nexport default class Graph extends MachinePrototype<State> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"X\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"Y\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"c8841786-aaf1-4f57-b0a6-144a5a825ff8\");\r\n  name = \"График\";\r\n  title = \"График\";\r\n\r\n  initShape = {\r\n    values: [],\r\n    minX: 0,\r\n    minY: 0,\r\n    maxY: 0,\r\n    maxX: 0,\r\n  };\r\n\r\n  async invoke(self: Machine<State>, params: RecordData[][]) {\r\n    self.state.values = [];\r\n    const len = params[0].length;\r\n    for (let i = 0; i < len; i++)\r\n      self.state.values.push(new Point(params[0][i].value, params[1][i].value));\r\n    return [[]];\r\n  }\r\n\r\n  toolstrip = (self: Machine<State>) => <>Записей {self.state.values.length}</>;\r\n\r\n  content = (self: Machine<State>) => {\r\n    const ref = useRef<HTMLCanvasElement>(null);\r\n\r\n    const height = 200;\r\n    const width = 200;\r\n\r\n    useEffect(() => {\r\n      var ctx = ref.current?.getContext(\"2d\")!;\r\n      const values = self.state.values;\r\n      if (values.length > 0) {\r\n        const minX = values[0].x;\r\n        self.state.minX = minX;\r\n\r\n        const maxX = values[values.length - 1].x;\r\n        self.state.maxX = maxX;\r\n\r\n        const rangeX = Math.abs(maxX - minX);\r\n\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.beginPath();\r\n\r\n        let minY = Number.MAX_VALUE;\r\n        self.state.minY = minY;\r\n        values.forEach((e) => {\r\n          if (e.y < minY) minY = e.y;\r\n        });\r\n\r\n        let maxY = Number.MIN_VALUE;\r\n        self.state.maxY = maxY;\r\n        values.forEach((e) => {\r\n          if (e.y > maxY) maxY = e.y;\r\n        });\r\n\r\n        const rangeY = Math.abs(maxY - minY);\r\n        console.log(values);\r\n\r\n        for (let i = 0; i < values.length; i++) {\r\n          const v = values[i];\r\n          const x = ((v.x - minX) / rangeX) * width;\r\n          const y = ((v.y - minY) / rangeY) * height;\r\n          if (i == 0) ctx.moveTo(x, height - y);\r\n          else ctx.lineTo(x, height - y);\r\n        }\r\n\r\n        ctx.stroke();\r\n        return () => ctx.clearRect(0, 0, width, height);\r\n      }\r\n    }, [self.state.values.length]);\r\n    return useObserver(() => (\r\n      <GraphContainer>\r\n       {/*  <div style={{ gridRow: 1, gridColumn: 1, justifySelf: \"end\" }}>\r\n          {self.state.maxY.toFixed(1)}\r\n        </div>\r\n        <div\r\n          style={{\r\n            alignSelf: \"end\",\r\n            gridRow: 1,\r\n            gridColumn: 1,\r\n            justifySelf: \"end\",\r\n          }}\r\n        >\r\n          {self.state.minY.toFixed(1)}\r\n        </div>\r\n        <div style={{ gridRow: 2, gridColumn: 2 }}>\r\n          {self.state.minX.toFixed(1)}\r\n        </div>\r\n        <div style={{ justifySelf: \"end\", gridRow: 2, gridColumn: 2 }}>\r\n          {self.state.maxY.toFixed(1)}\r\n        </div> */}\r\n        <GraphCanvas ref={ref} width={width} height={height} />\r\n      </GraphContainer>\r\n    ));\r\n  };\r\n}\r\nconst GraphContainer = styled.div`\r\n  display: grid;\r\n  grid-template-rows: auto 30px;\r\n  grid-template-columns: 30px auto;\r\n  color: gray;\r\n  > * {\r\n    margin: 2px;\r\n  }\r\n`;\r\n\r\nconst GraphCanvas = styled.canvas`\r\n  grid-column-start: 2;\r\n  grid-row-start: 1;\r\n  border-left: 1px solid ${(p) => p.theme.strain.border};\r\n  border-bottom: 1px solid ${(p) => p.theme.strain.border};\r\n`;\r\n","import React from \"react\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport styled from \"styled-components\";\r\nimport RecordTypePicker from \"../../App/Components/Menus/RecordTypePicker\";\r\nimport RecordType, { RecordField } from \"../../App/Models/document/RecordType\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport Wire from \"../../App/Presenters/Wire/Wire\";\r\nimport Socket from \"../../App/Presenters/Socket/Socket\";\r\nimport AppStore from \"../../AppRoot/stores/AppStore\";\r\nimport { useStores } from \"../../Hooks/useStores\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\nimport MergeIcon from \"mdi-react/MergeIcon\";\r\n\r\ninterface State {\r\n  typeID: UUID;\r\n}\r\n\r\nexport default class Split extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.any,\r\n      type: SocketType.Input,\r\n      isVirtual: false,\r\n      showTypeAnnotation: false,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.any,\r\n      type: SocketType.Output,\r\n      isVirtual: false,\r\n      showTypeAnnotation: false,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"f232a30a-fb15-482d-bfc8-254168325b32\");\r\n  name = \"Копировать\";\r\n  title = \"\";\r\n  isInvocable = false;\r\n  isPerSetInvocable = true;\r\n\r\n  initShape = { type: UUID.Empty };\r\n\r\n  async invokePerSet(self: Machine<any>, params: RecordData[]) {\r\n    const out = [];\r\n    for (let i = 0; i < self.dynamicSockets.length + 1; i++) {\r\n      out.push(params[0]);\r\n    }\r\n    return out;\r\n  }\r\n\r\n  onWireConnected(self: Machine<any>, wire: Wire) {\r\n    if (wire.toSocket?.machine == self) {\r\n      const id = wire.fromSocket?.recordID!;\r\n      self.sockets[0].recordID = id;\r\n      self.sockets[1].recordID = id;\r\n      self.dynamicSockets.forEach((e) => {\r\n        e.recordID = id;\r\n      });\r\n    }\r\n    let connectedCount = self.sockets[1].isDocked ? 1 : 0;\r\n    for (const s of self.dynamicSockets) if (s.isDocked) connectedCount++;\r\n    if (connectedCount == self.dynamicSockets.length + 1)\r\n      self.dynamicSockets.push(\r\n        new Socket(\r\n          {\r\n            id: connectedCount,\r\n            showTypeAnnotation: false,\r\n            title: \"\",\r\n            typeID: self.sockets[0].recordID,\r\n            type: SocketType.Output,\r\n          },\r\n          self,\r\n          false\r\n        )\r\n      );\r\n  }\r\n\r\n  content = (self: Machine<any>) => (\r\n    <MergeIcon\r\n      style={{ transform: \"rotate(180deg)\", color: \"white\" }}\r\n      size={20}\r\n    />\r\n  );\r\n}\r\n\r\nconst TypeWrapper = styled.div`\r\n  padding: 4px 12px;\r\n  margin: 4px;\r\n  border-radius: 20px;\r\n  border: 1px solid gray;\r\n  color: White;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n  width: 60px;\r\n  position: relative;\r\n  background-color: transparent;\r\n  border: gray 1px solid;\r\n  margin: 4px 0 4px 0;\r\n  padding: 2px 4px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  text-align: right;\r\n`;\r\n","import React from \"react\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport styled from \"styled-components\";\r\nimport RecordTypePicker from \"../../App/Components/Menus/RecordTypePicker\";\r\nimport RecordType from \"../../App/Models/document/RecordType\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\nimport { isArrayLike } from \"mobx\";\r\n\r\ninterface State {\r\n  from: number;\r\n  to: number;\r\n  step: number;\r\n  current: number;\r\n}\r\n\r\nexport default class Range extends MachinePrototype<State> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"ff1d3a76-3727-45ad-b3d5-cc4f703b1c58\");\r\n  name = \"Последовательность\";\r\n  title = \"Последовательно\";\r\n  isInvocable = false;\r\n\r\n  initShape = { from: 0, to: 1, step: 0.2, current: 0 };\r\n\r\n  async invoke(self: Machine<any>, params: RecordData[][]) {\r\n    const numT = self.sockets[0].recordType!;\r\n    const out = [];\r\n\r\n    const from = self.state.from,\r\n      to = self.state.to,\r\n      step = self.state.step,\r\n      rises = Math.sign(self.state.step) > 0;\r\n\r\n    for (var i = from; i <= to; i += step) out.push(new RecordData(numT, i));\r\n    return [out];\r\n  }\r\n\r\n  content = (self: Machine<State>) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          color: \"white\",\r\n          display: \"flex\",\r\n          alignItems: \"flex-end\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <div>\r\n          от\r\n          <Inp\r\n            style={{ width: 30 }}\r\n            onMouseDown={(ev) => ev.stopPropagation()}\r\n            value={self.state.from}\r\n            onChange={(ev) => (self.state.from = +ev.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          с шагом\r\n          <Inp\r\n            style={{ width: 30 }}\r\n            onMouseDown={(ev) => ev.stopPropagation()}\r\n            value={self.state.step}\r\n            onChange={(ev) => (self.state.step = +ev.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          до\r\n          <Inp\r\n            style={{ width: 30 }}\r\n            onMouseDown={(ev) => ev.stopPropagation()}\r\n            value={self.state.to}\r\n            onChange={(ev) => (self.state.to = +ev.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst Inp = styled.input`\r\n  margin: 4px;\r\n`;\r\n\r\nconst ValueWrap = styled.div`\r\n  color: white;\r\n  padding: 4px;\r\n  width: 30px;\r\n`;\r\n","import React from \"react\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport styled from \"styled-components\";\r\nimport RecordTypePicker from \"../../App/Components/Menus/RecordTypePicker\";\r\nimport RecordType, { RecordField } from \"../../App/Models/document/RecordType\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport Wire from \"../../App/Presenters/Wire/Wire\";\r\nimport Socket from \"../../App/Presenters/Socket/Socket\";\r\nimport AppStore from \"../../AppRoot/stores/AppStore\";\r\nimport { useStores } from \"../../Hooks/useStores\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\nimport MergeIcon from \"mdi-react/MergeIcon\";\r\n\r\ninterface State {\r\n  typeID: UUID;\r\n}\r\n\r\nexport default class Route extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"исходный\",\r\n      typeID: predefinedTypeIDs.any,\r\n      type: SocketType.Input,\r\n      isVirtual: false,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"условие\",\r\n      typeID: predefinedTypeIDs.bool,\r\n      type: SocketType.Input,\r\n      isVirtual: false,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"истина\",\r\n      typeID: predefinedTypeIDs.any,\r\n      type: SocketType.Output,\r\n      isVirtual: false,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"ложь\",\r\n      typeID: predefinedTypeIDs.any,\r\n      type: SocketType.Output,\r\n      isVirtual: false,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"f23ca30s-fb15-482d-bfc8-254168325b32\");\r\n  name = \"Переключатель\";\r\n  title = \"Переключатель\";\r\n  isInvocable = false;\r\n  isPerSetInvocable = true;\r\n  initShape = { type: UUID.Empty };\r\n\r\n  async invokePerSet(self: Machine<any>, params: RecordData[]) {\r\n    const pred = params[1].value as boolean;\r\n    return [pred ? params[0] : null, !pred ? params[0] : null];\r\n  }\r\n\r\n  onWireConnected(self: Machine<any>, wire: Wire) {\r\n    if (wire.toSocket == self.sockets[0]) {\r\n      const id = wire.fromSocket?.recordID!;\r\n      self.sockets[0].recordID = id;\r\n      self.sockets[2].recordID = id;\r\n      self.sockets[3].recordID = id;\r\n    }\r\n  }\r\n}\r\n\r\nconst TypeWrapper = styled.div`\r\n  padding: 4px 12px;\r\n  margin: 4px;\r\n  border-radius: 20px;\r\n  border: 1px solid gray;\r\n  color: White;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n  width: 60px;\r\n  position: relative;\r\n  background-color: transparent;\r\n  border: gray 1px solid;\r\n  margin: 4px 0 4px 0;\r\n  padding: 2px 4px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  text-align: right;\r\n`;\r\n","import React from \"react\";\r\nimport AddIcon from \"mdi-react/AddIcon\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\nexport default class Greater extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"A\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"B\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"A>B\",\r\n      typeID: predefinedTypeIDs.bool,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"ae5eb614-a1ee-4382-9b09-c4a5e9c296a7\");\r\n  name = \"Если больше\";\r\n  title = \"\";\r\n  isPerSetInvocable = true;\r\n\r\n  async invokePerSet(self: Machine<any>, params: RecordData[]) {\r\n    var numT = params[1].recordType;\r\n    return [new RecordData(numT!, params[0].value > params[1].value)];\r\n  }\r\n}\r\n","import SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport PlayIcon from \"mdi-react/PlayIcon\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport { values } from \"mobx\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\ninterface State {\r\n  val: boolean;\r\n}\r\n\r\nexport default class LogicalLog extends MachinePrototype<State> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.bool,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"c8941786-2af1-4f57-b0a6-144a5a825ff8\");\r\n  name = \"Логический вывод\";\r\n  title = \"Логический вывод\";\r\n\r\n  initShape = { val: false };\r\n\r\n  async invoke(self: Machine<State>, params: RecordData[][]) {\r\n    self.state.val = params[0][0].value\r\n    return [[]];\r\n  }\r\n\r\n  content = (self: Machine<State>) => (\r\n    <LogRecord>\r\n      <input type={\"checkbox\"} checked={self.state.val} />\r\n    </LogRecord>\r\n  );\r\n}\r\n\r\nconst LogRecord = styled.div`\r\n  color: white;\r\n  font-family: Consolas;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n`;\r\n","import SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport PlayIcon from \"mdi-react/PlayIcon\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport { values } from \"mobx\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\ninterface State {\r\n  val: boolean;\r\n}\r\n\r\nexport default class LogicalConstant extends MachinePrototype<State> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.bool,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"c8941782-2af1-4f57-b0a6-144a5a825ff8\");\r\n  name = \"Логика\";\r\n  title = \"\";\r\n\r\n  initShape = { val: false };\r\n\r\n  async invoke(self: Machine<any>, params: RecordData[][]) {\r\n    const numT = self.sockets[0].recordType!;\r\n    return [[new RecordData(numT, self.state.val)]];\r\n  }\r\n\r\n  content = (self: Machine<State>) => (\r\n    <LogRecord>\r\n      <input\r\n        type={\"checkbox\"}\r\n        checked={self.state.val}\r\n        onClick={(ev) => {\r\n          self.state.val = (ev as any).target.checked;\r\n          self.execute();\r\n        }}\r\n      />\r\n    </LogRecord>\r\n  );\r\n}\r\n\r\nconst LogRecord = styled.div`\r\n  color: white;\r\n  font-family: Consolas;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n`;\r\n","import SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport PlayIcon from \"mdi-react/PlayIcon\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport { values } from \"mobx\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\nimport { stores } from \"../../AppRoot/App\";\r\n\r\ninterface State {\r\n  data: number[];\r\n  rows: number;\r\n  columns: number;\r\n}\r\n\r\nexport default class CsvFromFile extends MachinePrototype<State> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"данные\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"линий\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"строк\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"c8942782-2af1-4f57-b0a6-144a5a825ff8\");\r\n  name = \"Прочитать csv\";\r\n  title = \"Данные из csv\";\r\n\r\n  initShape = { data: [], rows: 0, columns: 0 };\r\n\r\n  async invoke(self: Machine<State>, params: RecordData[][]) {\r\n    const t = stores.appStore.findRecordTypeByID(predefinedTypeIDs.number)!;\r\n    return [\r\n      self.state.data.map((p) => new RecordData(t, +p)),\r\n      [new RecordData(t, self.state.rows)],\r\n      [new RecordData(t, self.state.columns)],\r\n    ];\r\n  }\r\n\r\n  content = (self: Machine<State>) => {\r\n    function SetData(source: string) {\r\n      let columns = 0;\r\n      const map = source.split(\"\\n\").map((l) => {\r\n        const row = l.split(\",\").map((p) => +p);\r\n        columns = row.length;\r\n        return row;\r\n      });\r\n\r\n      self.state.rows = map.length;\r\n      self.state.columns = columns;\r\n      self.state.data = map.flat();\r\n    }\r\n\r\n    return (\r\n      <LogRecord>\r\n        <Container\r\n          type=\"file\"\r\n          onChange={async (ev) => {\r\n            SetData(await ev.target.files!.item(0)!.text());\r\n          }}\r\n        />\r\n      </LogRecord>\r\n    );\r\n  };\r\n}\r\n\r\nconst Container = styled.input`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst LogRecord = styled.div`\r\n  color: white;\r\n  font-family: Consolas;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport AddIcon from \"mdi-react/AddIcon\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport RecordType from \"../../App/Models/document/RecordType\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\nexport default class SquareMachine extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"A\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"A^2\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"421107ea-7593-4745-b7a8-08f2b92f45cf\");\r\n  name = \"Квадрат\";\r\n  title = \"\";\r\n  isPerSetInvocable = true;\r\n\r\n  async invokePerSet(self: Machine<any>, params: RecordData[]) {\r\n    var numT = params[0].recordType!;\r\n    return [new RecordData(numT, params[0].value * params[0].value)];\r\n  }\r\n}\r\n","import predefinedTypeIDs from \"../../../App/predefinedTypeIDs\";\r\nimport MachinePrototype from \"../../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../../shared/UUID\";\r\nimport SocketType from \"../../../App/Models/document/SocketType\";\r\nimport Machine from \"../../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../../App/Models/execution/RecordData\";\r\nimport Wire from \"../../../App/Presenters/Wire/Wire\";\r\nimport Socket from \"../../../App/Presenters/Socket/Socket\";\r\nimport MergeIcon from \"mdi-react/MergeIcon\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default class TakeFirst extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.any,\r\n      type: SocketType.Input,\r\n      isVirtual: false,\r\n      showTypeAnnotation: false,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"1 >\",\r\n      typeID: predefinedTypeIDs.any,\r\n      type: SocketType.Output,\r\n      isVirtual: false,\r\n      showTypeAnnotation: false,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"f23aa30a-fb15-482d-bfc8-254168325b32\");\r\n  name = \"Взять первые\";\r\n  title = \"Первые\";\r\n  isInvocable = false;\r\n\r\n  initShape = { type: UUID.Empty };\r\n\r\n  async invoke(self: Machine<any>, sets: RecordData[][]) {\r\n    const out = [];\r\n    const entriesN = 1 + self.dynamicSockets.length;\r\n    for (let i = 0; i < entriesN; i++) {\r\n      if (i < sets[0].length) {\r\n        out.push([sets[0][i]]);\r\n      } else {\r\n        out.push([]);\r\n      }\r\n    }\r\n    return out;\r\n  }\r\n\r\n  onWireConnected(self: Machine<any>, wire: Wire) {\r\n    if (wire.toSocket?.machine == self) {\r\n      const id = wire.fromSocket?.recordID!;\r\n      self.sockets[0].recordID = id;\r\n      self.sockets[1].recordID = id;\r\n      self.dynamicSockets.forEach((e) => {\r\n        e.recordID = id;\r\n      });\r\n    }\r\n    let connectedCount = self.sockets[1].isDocked ? 1 : 0;\r\n    for (const s of self.dynamicSockets) if (s.isDocked) connectedCount++;\r\n    if (connectedCount == self.dynamicSockets.length + 1)\r\n      self.dynamicSockets.push(\r\n        new Socket(\r\n          {\r\n            id: connectedCount,\r\n            showTypeAnnotation: false,\r\n            title: connectedCount + 1 + \" >\",\r\n            typeID: self.sockets[0].recordID,\r\n            type: SocketType.Output,\r\n          },\r\n          self,\r\n          false\r\n        )\r\n      );\r\n  }\r\n}\r\n\r\nconst TypeWrapper = styled.div`\r\n  padding: 4px 12px;\r\n  margin: 4px;\r\n  border-radius: 20px;\r\n  border: 1px solid gray;\r\n  color: White;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n  width: 60px;\r\n  position: relative;\r\n  background-color: transparent;\r\n  border: gray 1px solid;\r\n  margin: 4px 0 4px 0;\r\n  padding: 2px 4px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  text-align: right;\r\n`;\r\n","import React from \"react\";\r\nimport AddIcon from \"mdi-react/AddIcon\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\nexport default class PowerMachine extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"X\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"n\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"X^n\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"2e292cc6-0e20-47a9-bebe-1d603bdeb4fa\");\r\n  name = \"В степени\";\r\n  title = \"\";\r\n  isPerSetInvocable = true;\r\n\r\n  async invokePerSet(self: Machine<any>, params: RecordData[]) {\r\n    var numT = params[0].recordType!;\r\n    return [new RecordData(numT, Math.pow(params[0].value, params[1].value))];\r\n  }\r\n}\r\n","import predefinedTypeIDs from \"../../../App/predefinedTypeIDs\";\r\nimport MachinePrototype from \"../../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../../shared/UUID\";\r\nimport SocketType from \"../../../App/Models/document/SocketType\";\r\nimport Machine from \"../../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../../App/Models/execution/RecordData\";\r\nimport Wire from \"../../../App/Presenters/Wire/Wire\";\r\nimport Socket from \"../../../App/Presenters/Socket/Socket\";\r\nimport MergeIcon from \"mdi-react/MergeIcon\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default class Destributor extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.any,\r\n      type: SocketType.Input,\r\n      isVirtual: false,\r\n      showTypeAnnotation: false,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"1 >\",\r\n      typeID: predefinedTypeIDs.any,\r\n      type: SocketType.Output,\r\n      isVirtual: false,\r\n      showTypeAnnotation: false,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"f22aa30a-fb15-482d-bfc8-254168325b32\");\r\n  name = \"Распределить\";\r\n  title = \"Распределитель\";\r\n  isInvocable = false;\r\n\r\n  initShape = { type: UUID.Empty };\r\n\r\n  async invoke(self: Machine<any>, sets: RecordData[][]) {\r\n    const entriesN = self.dynamicSockets.length;\r\n    const out = [];\r\n    for (let i = 0; i < sets[0].length; i++) out.push([] as RecordData[]);\r\n    for (let i = 0; i < sets[0].length; i++) {\r\n      out[i % entriesN].push(sets[0][i]);\r\n    }\r\n    out.push([]);\r\n    return out;\r\n  }\r\n\r\n  onWireConnected(self: Machine<any>, wire: Wire) {\r\n    if (wire.toSocket?.machine == self) {\r\n      const id = wire.fromSocket?.recordID!;\r\n      self.sockets[0].recordID = id;\r\n      self.sockets[1].recordID = id;\r\n      self.dynamicSockets.forEach((e) => {\r\n        e.recordID = id;\r\n      });\r\n    }\r\n    let connectedCount = self.sockets[1].isDocked ? 1 : 0;\r\n    for (const s of self.dynamicSockets) if (s.isDocked) connectedCount++;\r\n    if (connectedCount == self.dynamicSockets.length + 1)\r\n      self.dynamicSockets.push(\r\n        new Socket(\r\n          {\r\n            id: connectedCount,\r\n            showTypeAnnotation: false,\r\n            title: connectedCount + 1 + \" >\",\r\n            typeID: self.sockets[0].recordID,\r\n            type: SocketType.Output,\r\n          },\r\n          self,\r\n          false\r\n        )\r\n      );\r\n  }\r\n}\r\n\r\nconst TypeWrapper = styled.div`\r\n  padding: 4px 12px;\r\n  margin: 4px;\r\n  border-radius: 20px;\r\n  border: 1px solid gray;\r\n  color: White;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n  width: 60px;\r\n  position: relative;\r\n  background-color: transparent;\r\n  border: gray 1px solid;\r\n  margin: 4px 0 4px 0;\r\n  padding: 2px 4px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  text-align: right;\r\n`;\r\n","import React from \"react\";\r\nimport AddIcon from \"mdi-react/AddIcon\";\r\nimport SocketType from \"../../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../../shared/UUID\";\r\nimport Machine from \"../../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../../App/Models/execution/RecordData\";\r\nimport predefinedTypeIDs from \"../../../App/predefinedTypeIDs\";\r\n\r\nexport default class SummatorMachine extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"∑\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"as5eb612-a1ee-4383-9b09-c4a5e9c296a7\");\r\n  name = \"Сумма ряда\";\r\n  title = \"\";\r\n\r\n  async invoke(self: Machine<any>, sets: RecordData[][]) {\r\n    let sum = 0;\r\n    for (let i = 0; i < sets[0].length; i++) {\r\n      sum += sets[0][i].value;\r\n    }\r\n    return [[new RecordData(self.sockets[0].recordType!, sum)]];\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport AddIcon from \"mdi-react/AddIcon\";\r\nimport SocketType from \"../../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../../shared/UUID\";\r\nimport Machine from \"../../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../../App/Models/execution/RecordData\";\r\nimport predefinedTypeIDs from \"../../../App/predefinedTypeIDs\";\r\n\r\nexport default class AveragerMachine extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"среднее\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"as5eb612-a1ee-4382-9b09-s4a5e9c296a7\");\r\n  name = \"Среднее ряда\";\r\n  title = \"\";\r\n\r\n  async invoke(self: Machine<any>, sets: RecordData[][]) {\r\n    let sum = 0;\r\n    for (let i = 0; i < sets[0].length; i++) {\r\n      sum += sets[0][i].value;\r\n    }\r\n    return [\r\n      [new RecordData(self.sockets[0].recordType!, sum / sets[0].length)],\r\n    ];\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport AddIcon from \"mdi-react/AddIcon\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\nexport default class Lower extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"A\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"B\",\r\n      typeID: predefinedTypeIDs.number,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"A<B\",\r\n      typeID: predefinedTypeIDs.bool,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"as5eb614-a1ee-4382-9b09-c4a5e9c296a7\");\r\n  name = \"Если меньше\";\r\n  title = \"\";\r\n  isPerSetInvocable = true;\r\n\r\n  async invokePerSet(self: Machine<any>, params: RecordData[]) {\r\n    var numT = params[1].recordType;\r\n    return [new RecordData(numT!, params[0].value < params[1].value)];\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport AddIcon from \"mdi-react/AddIcon\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\nexport default class And extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"A\",\r\n      typeID: predefinedTypeIDs.bool,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"B\",\r\n      typeID: predefinedTypeIDs.bool,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"A&B\",\r\n      typeID: predefinedTypeIDs.bool,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"ae5eb614-a1ee-4282-9b09-c4a5e9c296a7\");\r\n  name = \"И\";\r\n  title = \"\";\r\n  isPerSetInvocable = true;\r\n\r\n  async invokePerSet(self: Machine<any>, params: RecordData[]) {\r\n    var numT = params[1].recordType;\r\n    return [new RecordData(numT!, params[0].value && params[1].value)];\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport AddIcon from \"mdi-react/AddIcon\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\nexport default class Or extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"A\",\r\n      typeID: predefinedTypeIDs.bool,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"B\",\r\n      typeID: predefinedTypeIDs.bool,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"A|B\",\r\n      typeID: predefinedTypeIDs.bool,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"ae5sb614-a1ee-4382-9b09-c4a5e9c296a7\");\r\n  name = \"ИЛИ\";\r\n  title = \"\";\r\n  isPerSetInvocable = true;\r\n\r\n  async invokePerSet(self: Machine<any>, params: RecordData[]) {\r\n    var numT = params[1].recordType;\r\n    return [new RecordData(numT!, params[0].value || params[1].value)];\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport AddIcon from \"mdi-react/AddIcon\";\r\nimport SocketType from \"../../App/Models/document/SocketType\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../App/Models/execution/RecordData\";\r\nimport predefinedTypeIDs from \"../../App/predefinedTypeIDs\";\r\n\r\nexport default class Not extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.bool,\r\n      type: SocketType.Input,\r\n      showTypeAnnotation: true,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.bool,\r\n      type: SocketType.Output,\r\n      showTypeAnnotation: true,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"ae5sb612-a1ee-4382-9b09-c4a5e9c296a7\");\r\n  name = \"НЕ\";\r\n  title = \"\";\r\n  isPerSetInvocable = true;\r\n\r\n  async invokePerSet(self: Machine<any>, params: RecordData[]) {\r\n    var numT = params[0].recordType;\r\n    return [new RecordData(numT!, !params[0].value)];\r\n  }\r\n}\r\n","import predefinedTypeIDs from \"../../../App/predefinedTypeIDs\";\r\nimport MachinePrototype from \"../../../App/Models/document/MachinePrototype\";\r\nimport UUID from \"../../../shared/UUID\";\r\nimport SocketType from \"../../../App/Models/document/SocketType\";\r\nimport Machine from \"../../../App/Presenters/Machine/Machine\";\r\nimport RecordData from \"../../../App/Models/execution/RecordData\";\r\nimport Wire from \"../../../App/Presenters/Wire/Wire\";\r\nimport Socket from \"../../../App/Presenters/Socket/Socket\";\r\nimport MergeIcon from \"mdi-react/MergeIcon\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default class TakeLast extends MachinePrototype<any> {\r\n  sockets = [\r\n    {\r\n      id: 0,\r\n      title: \"\",\r\n      typeID: predefinedTypeIDs.any,\r\n      type: SocketType.Input,\r\n      isVirtual: false,\r\n      showTypeAnnotation: false,\r\n    },\r\n    {\r\n      id: 0,\r\n      title: \"1 >\",\r\n      typeID: predefinedTypeIDs.any,\r\n      type: SocketType.Output,\r\n      isVirtual: false,\r\n      showTypeAnnotation: false,\r\n    },\r\n  ];\r\n\r\n  id = UUID.FromString(\"f23aa30a-fb15-481d-bfc8-254168325b32\");\r\n  name = \"Взять последние\";\r\n  title = \"Последние\";\r\n  isInvocable = false;\r\n\r\n  initShape = { type: UUID.Empty };\r\n\r\n  async invoke(self: Machine<any>, sets: RecordData[][]) {\r\n    const out = [];\r\n    const entriesN = 1 + self.dynamicSockets.length;\r\n    const n = sets[0].length - 1;\r\n    for (let i = 0; i < entriesN; i++) {\r\n      if (i < sets[0].length) {\r\n        out.push([sets[0][n - i]]);\r\n      } else {\r\n        out.push([]);\r\n      }\r\n    }\r\n    return out;\r\n  }\r\n\r\n  onWireConnected(self: Machine<any>, wire: Wire) {\r\n    if (wire.toSocket?.machine == self) {\r\n      const id = wire.fromSocket?.recordID!;\r\n      self.sockets[0].recordID = id;\r\n      self.sockets[1].recordID = id;\r\n      self.dynamicSockets.forEach((e) => {\r\n        e.recordID = id;\r\n      });\r\n    }\r\n    let connectedCount = self.sockets[1].isDocked ? 1 : 0;\r\n    for (const s of self.dynamicSockets) if (s.isDocked) connectedCount++;\r\n    if (connectedCount == self.dynamicSockets.length + 1)\r\n      self.dynamicSockets.push(\r\n        new Socket(\r\n          {\r\n            id: connectedCount,\r\n            showTypeAnnotation: false,\r\n            title: connectedCount + 1 + \" >\",\r\n            typeID: self.sockets[0].recordID,\r\n            type: SocketType.Output,\r\n          },\r\n          self,\r\n          false\r\n        )\r\n      );\r\n  }\r\n}\r\n\r\nconst TypeWrapper = styled.div`\r\n  padding: 4px 12px;\r\n  margin: 4px;\r\n  border-radius: 20px;\r\n  border: 1px solid gray;\r\n  color: White;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n  width: 60px;\r\n  position: relative;\r\n  background-color: transparent;\r\n  border: gray 1px solid;\r\n  margin: 4px 0 4px 0;\r\n  padding: 2px 4px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  text-align: right;\r\n`;\r\n","import React from \"react\";\r\nimport { action, observable, flow } from \"mobx\";\r\nimport Point from \"../../shared/Point\";\r\nimport UUID from \"../../shared/UUID\";\r\nimport Factory from \"../../App/Presenters/Factory/Factory\";\r\nimport Machine from \"../../App/Presenters/Machine/Machine\";\r\nimport MachinePrototype from \"../../App/Models/document/MachinePrototype\";\r\nimport AdditionMachine from \"../../CorePackage/Math/Addition\";\r\nimport NumberLog from \"../../CorePackage/Widgets/NumberLog\";\r\nimport RecordType from \"../../App/Models/document/RecordType\";\r\nimport Package from \"../../App/Models/document/Package\";\r\nimport NumericConstant from \"../../CorePackage/Widgets/NumericConstant\";\r\nimport { ContextMenuState } from \"../../Hooks/useContextMenu\";\r\nimport MultiplicationMachine from \"../../CorePackage/Math/Multiplication\";\r\nimport SquareRootMachine from \"../../CorePackage/Math/SquareRoot\";\r\nimport RootMachine from \"../../CorePackage/Math/Root\";\r\nimport Slider from \"../../CorePackage/Widgets/Slider\";\r\nimport Wire from \"../../App/Presenters/Wire/Wire\";\r\nimport Constructor from \"../../CorePackage/Core/Constructor\";\r\nimport Destructor from \"../../CorePackage/Core/Destructor\";\r\nimport Graph from \"../../CorePackage/Widgets/Graph\";\r\nimport predefinedUUID from \"../../App/predefinedTypeIDs\";\r\nimport Split from \"../../CorePackage/Core/Split\";\r\nimport Range from \"../../CorePackage/Widgets/Range\";\r\nimport Route from \"../../CorePackage/Core/Route\";\r\nimport Greater from \"../../CorePackage/Logical/Greater\";\r\nimport LogicalLog from \"../../CorePackage/Widgets/LogicalLog\";\r\nimport LogicalConstant from \"../../CorePackage/Widgets/LogicalConstant\";\r\nimport CsvFromFile from \"../../CorePackage/Widgets/CsvFromFile\";\r\nimport SquareMachine from \"../../CorePackage/Math/Square\";\r\nimport TakeFirst from \"../../CorePackage/Core/Sequence/TakeFirst\";\r\nimport PowerMachine from \"../../CorePackage/Math/Power\";\r\nimport Destributor from \"../../CorePackage/Core/Sequence/Destributor\";\r\nimport SummatorMachine from \"../../CorePackage/Core/Aggregs/Sum\";\r\nimport AveragerMachine from \"../../CorePackage/Core/Aggregs/Avg\";\r\nimport Lower from \"../../CorePackage/Logical/Lower\";\r\nimport And from \"../../CorePackage/Logical/And\";\r\nimport Or from \"../../CorePackage/Logical/Or\";\r\nimport Not from \"../../CorePackage/Logical/Not\";\r\nimport TakeLast from \"../../CorePackage/Core/Sequence/TakeLast\";\r\n\r\nexport default class AppStore {\r\n  @observable currentFactory: Factory = new Factory();\r\n  @observable loadedPackages: Package[] = [];\r\n  @observable contextMenu = new ContextMenuState();\r\n  @observable currentPackage: Package = new Package();\r\n\r\n  @action createInstance(\r\n    proto: MachinePrototype<any>,\r\n    color: string,\r\n    pos: Point\r\n  ) {\r\n    // @ts-ignore\r\n    const inst = new Machine(proto, this);\r\n    inst.color = color;\r\n    inst.setPosition(pos.sub(this.currentFactory.viewOffset));\r\n    this.currentFactory.instances.push(inst);\r\n  }\r\n\r\n  @action removeWire(wire: Wire | null) {\r\n    const fromWires = wire?.fromSocket!.machine.wires;\r\n    fromWires.splice(fromWires.indexOf(wire as any), 1);\r\n    const toWires = wire?.toSocket!.machine.wires;\r\n    toWires.splice(toWires.indexOf(wire as any), 1);\r\n\r\n    wire!.toSocket!.isDocked = false;\r\n    wire!.toSocket!.currentWire = null;\r\n    wire!.fromSocket!.isDocked = false;\r\n    wire!.fromSocket!.currentWire = null;\r\n  }\r\n\r\n  @action removeInstance(inst: Machine<any>) {\r\n    for (const wire of inst.wires) {\r\n      this.removeWire(wire);\r\n    }\r\n    this.currentFactory.instances.splice(\r\n      this.currentFactory.instances.indexOf(inst),\r\n      1\r\n    );\r\n  }\r\n\r\n  @action findRecordTypeByID(id: UUID) {\r\n    const arrays = [\r\n      this.currentPackage.records,\r\n      ...this.loadedPackages.map((p) => p.records),\r\n    ];\r\n    const perEach = arrays.map((a) =>\r\n      a.find((p) => p.id.toString() === id.toString())\r\n    );\r\n    const res = perEach.find((p) => p !== undefined);\r\n    return res;\r\n  }\r\n\r\n  @action findRecordTypeByName(name: string) {\r\n    return [\r\n      this.currentPackage.records,\r\n      ...this.loadedPackages.map((p) => p.records),\r\n    ]\r\n      .map((a) => a.find((p) => p.name === name))\r\n      .find((p) => p !== undefined);\r\n  }\r\n\r\n  @action save() {\r\n    console.log(JSON.stringify(this.currentFactory));\r\n  }\r\n\r\n  @action initDefaultPackages() {\r\n    const math = {\r\n      color: \"#394f39\",\r\n      factories: [],\r\n      machinePrototypes: [\r\n        new AdditionMachine(),\r\n        new MultiplicationMachine(),\r\n        new SquareMachine(),\r\n        new PowerMachine(),\r\n        new RootMachine(),\r\n        new SummatorMachine(),\r\n        new AveragerMachine(),\r\n      ],\r\n      name: \"Математика\",\r\n      records: [\r\n        {\r\n          buildinRepresentation: \"number\",\r\n          fields: [],\r\n          color: \"#416b41\",\r\n          defaultValue: 0,\r\n          id: predefinedUUID.number,\r\n          name: \"Число\",\r\n          isRenames: false,\r\n          editable: false,\r\n        },\r\n        {\r\n          buildinRepresentation: \"any\",\r\n          fields: [],\r\n          color: \"#1b1b2f\",\r\n          defaultValue: null,\r\n          id: predefinedUUID.any,\r\n          name: \"Любой\",\r\n          isRenames: false,\r\n          editable: false,\r\n        },\r\n        {\r\n          buildinRepresentation: \"boolean\",\r\n          fields: [],\r\n          color: \"#e43f5a\",\r\n          defaultValue: false,\r\n          id: predefinedUUID.bool,\r\n          name: \"Логический\",\r\n          isRenames: false,\r\n          editable: false,\r\n        },\r\n        {\r\n          buildinRepresentation: null,\r\n          fields: [\r\n            {\r\n              typeID: predefinedUUID.number,\r\n              id: 0,\r\n              name: \"х\",\r\n              isRenames: false,\r\n            },\r\n            {\r\n              typeID: predefinedUUID.number,\r\n              id: 1,\r\n              name: \"y\",\r\n              isRenames: false,\r\n            },\r\n          ],\r\n          defaultValue: 0,\r\n          id: UUID.FromString(\"c517721a-f1f5-4f2d-9f61-ffd6481d63ec\"),\r\n          name: \"Вектор\",\r\n          color: \"teal\",\r\n          isRenames: false,\r\n          editable: false,\r\n        },\r\n      ],\r\n    } as Package;\r\n\r\n    const flow = {\r\n      color: \"#4c3342\",\r\n      factories: [],\r\n      machinePrototypes: [\r\n        new Constructor(),\r\n        new Destructor(),\r\n        new Route(),\r\n        new Split(),\r\n        new Destributor(),\r\n        new TakeFirst(),\r\n        new TakeLast(),\r\n      ],\r\n      name: \"Управление\",\r\n      records: [],\r\n    } as Package;\r\n\r\n    const logical = {\r\n      color: \"#42390c\",\r\n      factories: [],\r\n      machinePrototypes: [\r\n        new And(),\r\n        new Or(),\r\n        new Not(),\r\n        new Greater(),\r\n        new Lower(),\r\n      ],\r\n      name: \"Логика\",\r\n      records: [],\r\n    } as Package;\r\n\r\n    const output = {\r\n      color: \"#004445\",\r\n      factories: [],\r\n      machinePrototypes: [new NumberLog(), new LogicalLog(), new Graph()],\r\n      name: \"Вывод\",\r\n      records: [],\r\n    } as Package;\r\n\r\n    const input = {\r\n      color: \"#004445\",\r\n      factories: [],\r\n      machinePrototypes: [\r\n        new NumericConstant(),\r\n        new LogicalConstant(),\r\n        new Slider(),\r\n        new Range(),\r\n        new CsvFromFile(),\r\n      ],\r\n      name: \"Ввод\",\r\n      records: [],\r\n    } as Package;\r\n\r\n    this.loadedPackages.push(math, flow, logical, input, output);\r\n  }\r\n\r\n  @action initValues() {\r\n    /* const mathCat = MathCategory;\r\n    const monitorCat = MonitoringCategory;\r\n    const textCat = TextCategory;\r\n    const flowCat = FlowCategory;\r\n\r\n    this.machineCategories.push(mathCat, monitorCat, textCat, flowCat);\r\n\r\n    mathCat.machines.push(new AdditionMachine());\r\n    monitorCat.machines.push(new TextLog());\r\n    textCat.machines.push(new TextConstant());\r\n    flowCat.machines.push(new InputWarp(), new Constant());\r\n\r\n    this.machinePrototypes.push(\r\n      ...mathCat.machines,\r\n      ...monitorCat.machines,\r\n      ...textCat.machines,\r\n      ...flowCat.machines\r\n    ); */\r\n  }\r\n}\r\n","import ITheme from \"./ITheme\";\r\n\r\nexport default <ITheme>{\r\n    strain: {\r\n        background: \"rgba(59,67,75,0.87)\",\r\n        border: \"#6E737A\",\r\n        borderRadius: 2,\r\n        dock: \"rgba(170,176,184,0.5)\"\r\n    },\r\n    flow: {\r\n        background: \"#2a2b30\",\r\n        border: \"#3a3b47\",\r\n        step: 20\r\n    }\r\n};\r\n","// src/stores/theme-store.tsx\r\nimport {action, observable} from \"mobx\";\r\nimport dark from \"../../themes/dark\";\r\nimport ITheme from \"../../themes/ITheme\";\r\n\r\nexport default class ThemeStore {\r\n  @observable\r\n  currentTheme = dark;\r\n  @observable\r\n  themes = [dark];\r\n\r\n  @action\r\n  changeTheme(newTheme: ITheme) {\r\n    this.currentTheme = newTheme;\r\n  }\r\n}\r\n","import Point from \"./Point\";\r\n\r\nexport default class Area {\r\n  width: number;\r\n  height: number;\r\n\r\n  constructor(width: number, height: number) {\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  static betweenPoints(a: Point, b: Point) {\r\n    return new Area(Math.abs(a.x - b.x), Math.abs(a.y - b.y));\r\n  }\r\n}\r\n","import Point from \"./Point\";\r\n\r\nexport default class Vector extends Point {\r\n  get inverted() {\r\n    return new Vector(-this.x, -this.y);\r\n  }\r\n\r\n  mul(v: number) {\r\n    return new Vector(this.x * v, this.y * v);\r\n  }\r\n}\r\n","import { useObserver } from \"mobx-react-lite\";\r\nimport Area from \"../../../shared/Area\";\r\nimport SocketType from \"../../Models/document/SocketType\";\r\nimport Vector from \"../../../shared/Vector\";\r\nimport Point from \"../../../shared/Point\";\r\nimport React from \"react\";\r\nimport Wire from \"./Wire\";\r\n\r\nexport default ({ state }: { state: Wire }) =>\r\n  useObserver(() => {\r\n    const dockSize = new Area(22, 19);\r\n    const stroke = 11;\r\n\r\n    let fromPoint = state.fromSocket!.getPositionAction();\r\n    let toPoint = state.toSocket!.getPositionAction();\r\n\r\n    /*   if (state.fromSocket!.type == SocketType.Input) {\r\n      const t = fromPoint;\r\n      fromPoint = toPoint;\r\n      toPoint = t;\r\n    }\r\n */\r\n    const crossArea = Area.betweenPoints(fromPoint, toPoint);\r\n\r\n    const startVector = new Vector(1, 0);\r\n    const endVector = new Vector(-1, 0);\r\n\r\n    const yxRatio = crossArea.height / crossArea.width;\r\n    const horizontalDif = toPoint.x - fromPoint.x;\r\n    let curvatureRatio =\r\n      horizontalDif > 0\r\n        ? Math.max(\r\n            0,\r\n            (Math.tanh(-2 * yxRatio + 2) / 3 + 4 / 6) *\r\n              (-Math.sqrt(1 / 20 / yxRatio) + 1) *\r\n              crossArea.width\r\n          )\r\n        : 0;\r\n\r\n    if (Math.abs(curvatureRatio) == 1 / 0) curvatureRatio = 0;\r\n\r\n    const supportWidth = 120;\r\n    let supportLineRatio =\r\n      (Math.tanh((-5 * horizontalDif) / supportWidth / 1.6) / 2 + 1 / 2) *\r\n        supportWidth ?? 0;\r\n\r\n    if (supportLineRatio < 1) supportLineRatio = 0;\r\n\r\n    const startTarget = startVector\r\n      .mul(curvatureRatio)\r\n      .plus(startVector.mul(supportLineRatio))\r\n      .plus(fromPoint);\r\n    const endTarget = endVector\r\n      .mul(curvatureRatio)\r\n      .plus(endVector.mul(supportLineRatio))\r\n      .plus(toPoint);\r\n\r\n    const [xs, ys] = Point.components(\r\n      fromPoint,\r\n      toPoint,\r\n      startTarget,\r\n      endTarget\r\n    );\r\n\r\n    const leftTopBound = new Point(Math.min(...xs), Math.min(...ys));\r\n    const rightBottomBound = new Point(Math.max(...xs), Math.max(...ys));\r\n    const splainArea = Area.betweenPoints(leftTopBound, rightBottomBound);\r\n\r\n    const height = splainArea.height + dockSize.height;\r\n    const width = splainArea.width + dockSize.width * 2;\r\n\r\n    const transition = `translate(${leftTopBound.x -\r\n      dockSize.width}px,${leftTopBound.y - stroke + 2}px)`;\r\n\r\n    const offsetY = -leftTopBound.y + dockSize.height / 2;\r\n    const offsetX = -leftTopBound.x + dockSize.width;\r\n\r\n    function RenderRightDock(pos: Point) {\r\n      return (\r\n        <path\r\n          transform={`translate(${pos.x -\r\n            leftTopBound.x -\r\n            1 +\r\n            dockSize.width},${pos.y + offsetY - dockSize.height / 2})`}\r\n          d=\"M22 14.5L16 19L3.49691e-07 15L-5.96007e-07 4L16 1.56163e-06L22 4.5L22 14.5Z\"\r\n          fill={state.fromSocket?.recordType?.color}\r\n        />\r\n      );\r\n    }\r\n\r\n    function RenderLeftDock(pos: Point) {\r\n      return (\r\n        <path\r\n          transform={`translate(${pos.x - leftTopBound.x + 1},${pos.y +\r\n            offsetY -\r\n            dockSize.height / 2})`}\r\n          d=\"M0 4.50001L5.99998 3.8147e-06L22 4L22 15L5.99998 19L0 14.5L0 4.50001Z\"\r\n          fill={state.fromSocket?.recordType?.color}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <svg\r\n        style={{\r\n          height,\r\n          width,\r\n          cursor: \"crosshair\",\r\n          zIndex: 2,\r\n          position: \"absolute\",\r\n          transform: transition,\r\n        }}\r\n        viewBox={`0 0 ${width} ${height}`}\r\n      >\r\n        <path\r\n          d={`M ${fromPoint.x + offsetX} ${fromPoint.y + offsetY} \r\n                    C ${startTarget.x + offsetX} ${startTarget.y + offsetY},\r\n                     ${endTarget.x + offsetX} ${endTarget.y + offsetY},\r\n                      ${toPoint.x + offsetX} ${toPoint.y + offsetY}`}\r\n          stroke={state.fromSocket?.recordType?.color}\r\n          stroke-dasharray=\"20,20\"\r\n          strokeWidth={stroke}\r\n          stroke-linecap=\"round\"\r\n          fill=\"transparent\"\r\n        />\r\n\r\n        {RenderLeftDock(fromPoint)}\r\n        {RenderRightDock(toPoint)}\r\n      </svg>\r\n    );\r\n  });\r\n","import Socket from \"../Socket/Socket\";\r\nimport UUID from \"../../../shared/UUID\";\r\nimport RecordData from \"../../Models/execution/RecordData\";\r\n\r\nexport default class Wire {\r\n  fromSocket: Socket | null = null;\r\n  toSocket: Socket | null = null;\r\n  id: UUID = UUID.Empty;\r\n\r\n  data: RecordData[] | null = null;\r\n\r\n  constructor(from: Socket | null, to: Socket | null) {\r\n    this.fromSocket = from;\r\n    this.toSocket = to;\r\n    this.id = UUID.Generate();\r\n  }\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport SocketType from \"../../Models/document/SocketType\";\r\nimport { useStores } from \"../../../Hooks/useStores\";\r\nimport Point from \"../../../shared/Point\";\r\nimport Wire from \"../Wire/Wire\";\r\nimport Socket from \"./Socket\";\r\nimport useGlobalTheme from \"../../../Hooks/useGlobalTheme\";\r\nimport styled from \"styled-components\";\r\nimport UUID from \"../../../shared/UUID\";\r\nimport { stores } from \"../../../AppRoot/App\";\r\n\r\nexport default ({ state }: { state: Socket }) => {\r\n  const [isHover, setIsHover] = useState(false);\r\n\r\n  const { appStore } = useStores();\r\n  const factory = appStore.currentFactory;\r\n\r\n  const ref = useRef<SVGSVGElement>(null);\r\n\r\n  const theme = useGlobalTheme();\r\n\r\n  function CapturePosition() {\r\n    const rect = ref.current!.getBoundingClientRect();\r\n\r\n    state.getPositionAction = function() {\r\n      return new Point(\r\n        rect.x + (state.type === SocketType.Output ? rect.width - 1 : 1),\r\n        rect.y + rect.height / 2 + 1\r\n      ).sub(factory.viewOffset);\r\n    };\r\n  }\r\n  const pos = state.machine.position;\r\n  const vPos = factory.viewOffset;\r\n\r\n  useEffect(() => {\r\n    CapturePosition();\r\n  }, [pos.y, pos.x, vPos.x, vPos.y]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mousemove\", TrackMouseMove);\r\n    window.addEventListener(\"mouseup\", EndLinking);\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", TrackMouseMove);\r\n      window.removeEventListener(\"mouseup\", EndLinking);\r\n    };\r\n  }); // mouse handlers\r\n\r\n  function isLinkable(wire: Wire | null) {\r\n    return (\r\n      wire &&\r\n      (wire.toSocket?.recordType === state.recordType ||\r\n        wire.fromSocket?.recordType === state.recordType ||\r\n        state.recordType === stores.appStore.findRecordTypeByID(UUID.Empty))\r\n    );\r\n  }\r\n\r\n  const MouseEnter = () => {\r\n    if (isLinkable(factory.linkerWire)) setIsHover(true);\r\n  };\r\n\r\n  const MouseLeave = () => {\r\n    setIsHover(false);\r\n  };\r\n\r\n  const TryMakeWire = () => {\r\n    if (isLinkable(factory.linkerWire)) {\r\n      const wire = factory.linkerWire;\r\n      if (wire == null) return;\r\n\r\n      factory.linkerWire = null;\r\n\r\n      let real = null;\r\n\r\n      if (wire.toSocket?.isVirtual) {\r\n        wire.toSocket = state;\r\n        real = wire.fromSocket;\r\n      } else {\r\n        wire.fromSocket = state;\r\n        real = wire.toSocket;\r\n      }\r\n\r\n      state!.currentWire = wire;\r\n      state!.machine = state.machine;\r\n      state!.isVirtual = false;\r\n\r\n      real!.isDocked = true;\r\n      real!.currentWire = wire;\r\n\r\n      state!.isDocked = true;\r\n\r\n      real!.machine.wires.push(wire);\r\n      state!.machine.wires.push(wire);\r\n\r\n      real?.machine.proto.onWireConnected(real.machine, wire);\r\n      state?.machine.proto.onWireConnected(state.machine, wire);\r\n    }\r\n  };\r\n\r\n  const TryBeginLinking = (ev: React.MouseEvent) => {\r\n    ev.stopPropagation();\r\n    if (ev.button === 0) {\r\n      const virtualSocket = new Socket(\r\n        {\r\n          type:\r\n            state.type == SocketType.Input\r\n              ? SocketType.Output\r\n              : SocketType.Input,\r\n          title: \"\",\r\n          typeID: state.recordType?.id ?? UUID.Empty,\r\n          id: 0,\r\n          showTypeAnnotation: false,\r\n        },\r\n        state.machine,\r\n        true\r\n      );\r\n\r\n      ev.persist();\r\n      virtualSocket.getPositionAction = () =>\r\n        new Point(+ev.clientX, +ev.clientY);\r\n\r\n      if (!state.isDocked) {\r\n        if (state.type === SocketType.Output) {\r\n          factory!.linkerWire = new Wire(state, virtualSocket);\r\n        } else {\r\n          factory!.linkerWire = new Wire(virtualSocket, state);\r\n        }\r\n      } else {\r\n        const wire = state.currentWire;\r\n        const real =\r\n          state.type == SocketType.Input ? wire!.fromSocket : wire!.toSocket;\r\n\r\n        appStore.removeWire(wire);\r\n        virtualSocket.type = state.type;\r\n\r\n        if (state.type === SocketType.Input) {\r\n          factory!.linkerWire = new Wire(real, virtualSocket);\r\n        } else {\r\n          factory!.linkerWire = new Wire(virtualSocket, real);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const TrackMouseMove = (ev: MouseEvent) => {\r\n    if (factory.linkerWire) {\r\n      var setter = function() {\r\n        return new Point(ev.clientX, ev.clientY).sub(factory.viewOffset);\r\n      };\r\n      if (factory.linkerWire.toSocket?.isVirtual) {\r\n        factory.linkerWire!.toSocket!.getPositionAction = setter;\r\n      } else {\r\n        factory.linkerWire!.fromSocket!.getPositionAction = setter;\r\n      }\r\n    }\r\n  };\r\n\r\n  const EndLinking = () => {\r\n    factory.linkerWire = null;\r\n    CapturePosition();\r\n  };\r\n\r\n  const DockContainer = ({\r\n    children,\r\n    left,\r\n    right,\r\n  }: {\r\n    children: React.ReactNode;\r\n    left: number | string;\r\n    right: number | string;\r\n  }) => (\r\n    <svg\r\n      ref={ref}\r\n      onMouseDown={TryBeginLinking}\r\n      onMouseUp={TryMakeWire}\r\n      style={{\r\n        right,\r\n        left,\r\n        cursor: \"crosshair\",\r\n        paddingTop: 2,\r\n        position: \"absolute\",\r\n      }}\r\n      width=\"22\"\r\n      height=\"19\"\r\n      viewBox=\"0 0 22 19\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      {children}\r\n    </svg>\r\n  );\r\n\r\n  const categoryColor = state.machine.color;\r\n  return (\r\n    <>\r\n      {/* {isLinking ? <WireInst /> : null}*/}\r\n      {state.type === SocketType.Output ? (\r\n        <Container>\r\n          <Label\r\n            style={{\r\n              marginRight: -8,\r\n              position: \"relative\",\r\n              backgroundColor: categoryColor,\r\n              zIndex: 1,\r\n            }}\r\n          >\r\n            {state.title}\r\n            {state.showAnnotation ? (\r\n              <LabelTypeAnnotation>\r\n                {state.recordType?.name}\r\n              </LabelTypeAnnotation>\r\n            ) : null}\r\n          </Label>\r\n\r\n          <svg\r\n            style={{ position: \"relative\" }}\r\n            width=\"20\"\r\n            height=\"25\"\r\n            viewBox=\"0 0 20 25\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M20 25L0 25L2.18557e-06 -1.74846e-06L20 0L20 3.125L14 7.5L14 17.5L20 21.875L20 25Z\"\r\n              fill={categoryColor}\r\n            />\r\n          </svg>\r\n\r\n          <DockContainer right={-16} left={\"auto\"}>\r\n            <path\r\n              onMouseEnter={MouseEnter}\r\n              onMouseLeave={MouseLeave}\r\n              d=\"M0 4.50001L5.99998 3.8147e-06L22 4L22 15L5.99998 19L0 14.5L0 4.50001Z\"\r\n              fill={isHover ? theme.strain.dock : \"transparent\"}\r\n            />\r\n          </DockContainer>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <DockContainer right={\"auto\"} left={-14}>\r\n            <path\r\n              onMouseEnter={MouseEnter}\r\n              onMouseLeave={MouseLeave}\r\n              d=\"M22 14.5L16 19L3.49691e-07 15L-5.96007e-07 4L16 1.56163e-06L22 4.5L22 14.5Z\"\r\n              fill={isHover ? theme.strain.dock : \"transparent\"}\r\n            />\r\n          </DockContainer>\r\n\r\n          <svg\r\n            width=\"20\"\r\n            height=\"25\"\r\n            viewBox=\"0 0 20 25\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M0 0H20V25H0V21.875L6 17.5V7.5L0 3.125V0Z\"\r\n              fill={categoryColor}\r\n            />\r\n          </svg>\r\n          <Label style={{ marginLeft: -8, backgroundColor: categoryColor }}>\r\n            {state.title}\r\n            {state.showAnnotation ? (\r\n              <LabelTypeAnnotation>\r\n                {state.recordType?.name}\r\n              </LabelTypeAnnotation>\r\n            ) : null}\r\n          </Label>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst LabelTypeAnnotation = styled.div`\r\n  font-size: 8px;\r\n  color: gray;\r\n`;\r\n\r\nconst Label = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  white-space: nowrap;\r\n  align-items: center;\r\n  color: white;\r\n  font-family: Arial;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  user-select: none;\r\n`;\r\n","import {useStores} from \"./useStores\";\r\n\r\nexport default function useGlobalTheme() {\r\n  var {themeStore} = useStores();\r\n  return themeStore.currentTheme;\r\n}\r\n","import React, {\r\n  ReactChildren,\r\n  ReactNode,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Wire from \"../Wire/Wire\";\r\nimport WireDock from \"../Socket/Socket\";\r\nimport Point from \"../../../shared/Point\";\r\nimport { useObserver } from \"mobx-react-lite\";\r\nimport SocketType from \"../../Models/document/SocketType\";\r\nimport Machine from \"./Machine\";\r\nimport { useStores } from \"../../../Hooks/useStores\";\r\nimport ChevronDoubleRightIcon from \"mdi-react/ChevronDoubleRightIcon\";\r\nimport PlayIcon from \"mdi-react/PlayIcon\";\r\nimport ContentSaveOutlineIcon from \"mdi-react/ContentSaveOutlineIcon\";\r\nimport ContentSaveMoveIcon from \"mdi-react/ContentSaveMoveIcon\";\r\nimport TrashIcon from \"mdi-react/TrashCanIcon\";\r\n\r\nexport default function BlockPresenter({\r\n  state,\r\n  children,\r\n}: {\r\n  children: ReactNode;\r\n  state: Machine<any>;\r\n}) {\r\n  const [dragOffset, setDragOffset] = useState<Point | undefined>(undefined);\r\n  const [isDrag, setIsDrag] = useState(false);\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const { appStore } = useStores();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mousemove\", OnGlobalMouseMove);\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", OnGlobalMouseMove);\r\n    };\r\n  }); // mouse handlers\r\n\r\n  function OnGlobalMouseUp() {\r\n    setIsDrag(false);\r\n    console.log(\"mouse up\");\r\n  }\r\n\r\n  function OnMouseDown(mEvent: React.MouseEvent) {\r\n    if (!appStore.currentFactory.linkerWire) {\r\n      setDragOffset(\r\n        new Point(\r\n          mEvent.clientX - state.position.x,\r\n          mEvent.clientY - state.position.y\r\n        )\r\n      );\r\n      setIsDrag(true);\r\n    }\r\n  }\r\n\r\n  function OnGlobalMouseMove(ev: MouseEvent) {\r\n    if (isDrag) {\r\n      state.setPosition(\r\n        new Point(ev.clientX - dragOffset!.x, ev.clientY - dragOffset!.y)\r\n      );\r\n    }\r\n  }\r\n\r\n  const barStyle = { backgroundColor: state.color };\r\n  //chevron-triple-right step-forward-2 content-save-move content-save-outline\r\n  return useObserver(() => (\r\n    <BlockContainer\r\n      onMouseUp={OnGlobalMouseUp}\r\n      onMouseDown={OnMouseDown}\r\n      ref={ref}\r\n    >\r\n      <TopBar style={barStyle}>{state.proto?.title}</TopBar>\r\n      <DocksContainer>{children}</DocksContainer>\r\n      <BottomBar style={barStyle}>\r\n        <ToolStripContainer>{state.proto.toolstrip(state)}</ToolStripContainer>\r\n        {/* state.proto.isInvocable */ true ? (\r\n          <div\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n            onMouseDown={(ev) => ev.stopPropagation()}\r\n          >\r\n            <TrashIcon\r\n              onClick={(ev) => {\r\n                appStore.removeInstance(state);\r\n              }}\r\n              size={16}\r\n            />\r\n            {/*   {state.cacheOut ? (\r\n              <ContentSaveMoveIcon\r\n                onClick={() => (state.cacheOut = false)}\r\n                style={{ color: \"white\" }}\r\n                size={16}\r\n              />\r\n            ) : (\r\n              <ContentSaveOutlineIcon\r\n                onClick={() => (state.cacheOut = true)}\r\n                size={16}\r\n              />\r\n            )} */}\r\n            {state.sockets.find((p) => p.type == SocketType.Input) ==\r\n            undefined ? (\r\n              <PlayIcon\r\n                onClick={async (ev) => {\r\n                  ev.stopPropagation();\r\n                  state.cache = null;\r\n                  state.execute();\r\n                }}\r\n                size={16}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n      </BottomBar>\r\n    </BlockContainer>\r\n  ));\r\n}\r\n\r\nconst ToolStripContainer = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: auto;\r\n  > * {\r\n    margin: 8px 4px;\r\n    color: gray;\r\n  }\r\n`;\r\n\r\nconst BlockContainer = styled.div`\r\n  userselect: \"none\";\r\n`;\r\n\r\nconst DocksContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n  cursor: grab;\r\n`;\r\n\r\nconst Bar = styled.div`\r\n  flex: 0;\r\n  user-select: none;\r\n  color: white;\r\n  font-family: Arial;\r\n`;\r\n\r\nconst TopBar = styled(Bar)`\r\n  border-radius: 4px 4px 0 0;\r\n  font-size: 14px;\r\n  padding: 4px;\r\n  border-bottom: 1px ${(p) => p.theme.strain.border} solid;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-family: Arial;\r\n  color: gray;\r\n`;\r\n\r\nconst BottomBar = styled(Bar)`\r\n  border-radius: 0 0 4px 4px;\r\n  border-top: 1px ${(p) => p.theme.strain.border} solid;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  padding: 4px;\r\n  color: gray;\r\n\r\n  > div *:hover {\r\n    color: white;\r\n  }\r\n`;\r\n","import { useObserver } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Machine from \"./Machine\";\r\nimport SocketType from \"../../Models/document/SocketType\";\r\nimport SocketPresenter from \"../Socket/SocketPresenter\";\r\nimport Block from \"./Block\";\r\nimport { useStores } from \"../../../Hooks/useStores\";\r\n\r\nexport default ({ state }: { state: Machine<any> }) => {\r\n  const { appStore } = useStores();\r\n\r\n  function Spacer({ style }: { style: any }) {\r\n    return (\r\n      <div\r\n        style={{\r\n          ...style,\r\n          backgroundColor: state.color,\r\n          flex: 1,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const allSockets = [...state.sockets, ...state.dynamicSockets];\r\n  const inputSockets = allSockets.filter((p) => p.type === SocketType.Input);\r\n  const outputSockets = allSockets.filter((p) => p.type === SocketType.Output);\r\n\r\n  return useObserver(() => (\r\n    <Block state={state}>\r\n      <DocksLine>\r\n        <Spacer style={{}} />\r\n        {inputSockets.map((i) => (\r\n          <SocketPresenter key={i.id * i.type ? 1 : -1} state={i} />\r\n        ))}\r\n        <Spacer style={{}} />\r\n      </DocksLine>\r\n      <Spacer\r\n        style={{\r\n          width: inputSockets.length ? 10 : 0,\r\n          paddingTop: 4,\r\n          paddingBottom: 4,\r\n        }}\r\n      />\r\n      <ContentContainer style={{ backgroundColor: state.color }}>\r\n        {state.proto.content(state, appStore)}\r\n      </ContentContainer>\r\n      <Spacer\r\n        style={{\r\n          width: outputSockets.length ? 10 : 0,\r\n          paddingTop: 4,\r\n          paddingBottom: 4,\r\n        }}\r\n      />\r\n      <DocksLine>\r\n        <Spacer style={{}} />\r\n        {outputSockets.map((i) => (\r\n          <SocketPresenter key={i.id * i.type ? 1 : -1} state={i} />\r\n        ))}\r\n        <Spacer style={{}} />\r\n      </DocksLine>\r\n    </Block>\r\n  ));\r\n};\r\n\r\nconst ContentContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst DocksLine = styled.div`\r\n  flex: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React, { createElement, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Point from \"../../../shared/Point\";\r\nimport ContextMenuContentProps from \"./ContextMenuContentProps\";\r\n\r\nexport default function ContextMenu({\r\n  Content,\r\n  Activator,\r\n}: {\r\n  Content: (props: ContextMenuContentProps) => any;\r\n  Activator: (show: (point: Point) => void) => React.ReactNode;\r\n}) {\r\n  const [pos, setPos] = useState(Point.Zero);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  function onActivation(pos: Point) {\r\n    setPos(pos);\r\n    setIsVisible(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {Activator(onActivation)}\r\n      {isVisible ? (\r\n        <MenuBackground onClick={(ev) => setIsVisible(false)}>\r\n          <MenuContainer\r\n            onClick={(ev) => {\r\n              ev.stopPropagation();\r\n            }}\r\n            style={{\r\n              top: `${pos.y}px`,\r\n              left: `${pos.x}px`,\r\n            }}\r\n          >\r\n            <Content setVisible={setIsVisible} menuPos={pos} />\r\n          </MenuContainer>\r\n        </MenuBackground>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nconst MenuContainer = styled.div`\r\n  position: absolute;\r\n`;\r\n\r\nconst MenuBackground = styled.div`\r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  left: 0;\r\n  top: 0;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useStores } from \"../../../Hooks/useStores\";\r\nimport ContextMenuContentProps from \"../ContextMenu/ContextMenuContentProps\";\r\nimport Package from \"../../Models/document/Package\";\r\nimport NumericIcon from \"mdi-react/NumericIcon\";\r\nimport ArrowDecisionOutlineIcon from \"mdi-react/ArrowDecisionOutlineIcon\";\r\nimport PackageVariantClosedIcon from \"mdi-react/PackageVariantClosedIcon\";\r\nimport ViewDashboardOutlineIcon from \"mdi-react/ViewDashboardOutlineIcon\";\r\nimport ImportIcon from \"mdi-react/ImportIcon\";\r\nimport ExportIcon from \"mdi-react/ExportIcon\";\r\nimport CircleHalfFull from 'mdi-react/CircleHalfFullIcon'\r\n\r\nexport default function SmartMenu({\r\n  menuPos,\r\n  setVisible,\r\n}: ContextMenuContentProps) {\r\n  var { appStore } = useStores();\r\n  const [selectedPackage, setSelectedPackage] = useState<Package | null>(null);\r\n\r\n  function RenderIcon(name: string) {\r\n    switch (name) {\r\n      case \"Математика\":\r\n        return <NumericIcon size={24} />;\r\n      case \"Управление\":\r\n        return <ArrowDecisionOutlineIcon size={24} />;\r\n      case \"Ввод\":\r\n        return <ImportIcon size={24} />;\r\n      case \"Вывод\":\r\n        return <ViewDashboardOutlineIcon size={24} />;\r\n      case \"Логика\":\r\n        return <CircleHalfFull size={24} />;\r\n      default:\r\n        return <div>{name}</div>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CategoriesContainer>\r\n          {appStore.loadedPackages.map((pkg) => (\r\n            <CategoryWrapper\r\n              key={pkg.name}\r\n              style={{\r\n                filter: selectedPackage === pkg ? \"brightness(120%)\" : \"\",\r\n              }}\r\n              onClick={() => setSelectedPackage(pkg)}\r\n            >\r\n              <CategoryItem style={{ backgroundColor: pkg.color }}>\r\n                {RenderIcon(pkg.name)}\r\n              </CategoryItem>\r\n            </CategoryWrapper>\r\n          ))}\r\n        </CategoriesContainer>\r\n        {selectedPackage ? (\r\n          <MachinesList>\r\n            {selectedPackage.machinePrototypes.map((proto) => (\r\n              <MachinesListItem\r\n                key={proto.id.toString()}\r\n                onClick={(ev) => {\r\n                  appStore.createInstance(\r\n                    proto,\r\n                    selectedPackage.color,\r\n                    menuPos\r\n                  );\r\n                  setVisible(false);\r\n                }}\r\n              >\r\n                {proto.name}\r\n              </MachinesListItem>\r\n            ))}\r\n          </MachinesList>\r\n        ) : null}\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nconst CategoryItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-width: 40px;\r\n  height: 40px;\r\n`;\r\n\r\nconst CategoriesContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst MachinesList = styled.div`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 8px;\r\n`;\r\n\r\nconst MachinesListItem = styled.div`\r\n  font-size: 14px;\r\n  padding: 2px;\r\n  padding-left: 12px;\r\n  padding-right: 12px;\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: gray;\r\n  }\r\n`;\r\n\r\nconst CategoryWrapper = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  min-width: 220px;\r\n  min-height: 200px;\r\n  background-color: #14151b;\r\n  border-radius: 4px;\r\n\r\n  color: white;\r\n  font-family: Arial;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Point from \"../../../shared/Point\";\r\nimport { useStores } from \"../../../Hooks/useStores\";\r\nimport UUID from \"../../../shared/UUID\";\r\nimport { useObserver } from \"mobx-react-lite\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport Factory from \"./Factory\";\r\nimport styled from \"styled-components\";\r\nimport WirePresenter from \"../Wire/WirePresenter\";\r\nimport MachinePresenter from \"../Machine/MachinePresenter\";\r\nimport ContextMenu from \"../../Components/ContextMenu/ContextMenu\";\r\nimport SmartMenu from \"../../Components/Menus/SmartMenu\";\r\n\r\nexport default ({ state }: { state: Factory }) => {\r\n  const [viewDragOffset, setViewDragOffset] = useState(Point.Zero);\r\n  const [isViewDrag, setIsViewDrag] = useState(false);\r\n\r\n  const { appStore } = useStores();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mousemove\", OnGlobalMouseMove);\r\n    window.addEventListener(\"mouseup\", OnGlobalMouseUp);\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", OnGlobalMouseMove);\r\n      window.removeEventListener(\"mouseup\", OnGlobalMouseUp);\r\n    };\r\n  }); // mouse handlers\r\n\r\n  function OnMouseDown(ev: React.MouseEvent) {\r\n    if (ev.button === 1 /*middle*/) {\r\n      setIsViewDrag(true);\r\n      setViewDragOffset(\r\n        new Point(\r\n          ev.clientX - state.viewOffset.x,\r\n          ev.clientY - state.viewOffset.y\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  function OnGlobalMouseUp(ev: MouseEvent) {\r\n    if (isViewDrag) setIsViewDrag(false);\r\n  }\r\n\r\n  function OnGlobalMouseMove(ev: MouseEvent) {\r\n    if (isViewDrag) {\r\n      state.setViewOffset(\r\n        new Point(ev.clientX - viewDragOffset.x, ev.clientY - viewDragOffset.y)\r\n      );\r\n    }\r\n  }\r\n\r\n  /*function GetLinerFromPoint() {\r\n      const instance = factory.instances.find(\r\n        p => p.id == factory.linkerWire?.fromId\r\n      );\r\n      const proto = factoryStore.machinePselfrototypes.find(p => p.id === instance!.id);\r\n\r\n    }\r\n  */\r\n\r\n  return useObserver(() => (\r\n    <ContextMenu\r\n      Content={SmartMenu}\r\n      Activator={(show) =>\r\n        useObserver(() => (\r\n          <Container\r\n            onDragOver={(ev: React.MouseEvent) => ev.preventDefault()}\r\n            onMouseDown={OnMouseDown}\r\n            onContextMenu={(ev) => {\r\n              ev.preventDefault();\r\n              show(new Point(ev.clientX, ev.clientY));\r\n            }}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              backgroundPosition: `${state.viewOffset.x}px ${state.viewOffset.y}px`,\r\n            }}\r\n          >\r\n            <MovingContainer\r\n              style={{\r\n                transform: `translate(${state.viewOffset.x}px,${state.viewOffset.y}px)`,\r\n              }}\r\n            >\r\n              {state.instances.map((m) => {\r\n                return (\r\n                  <>\r\n                    <StrainContainer\r\n                      style={{\r\n                        zIndex: 4,\r\n                        transform: `translate(${+m.position.x}px, ${\r\n                          m.position.y\r\n                        }px)`,\r\n                      }}\r\n                      key={m.id.toString()}\r\n                    >\r\n                      <MachinePresenter state={m} />\r\n                    </StrainContainer>\r\n                    {m.wires\r\n                      .filter(\r\n                        (p) =>\r\n                          p.fromSocket!.getPositionAction &&\r\n                          p.toSocket?.machine === m\r\n                      )\r\n                      .map((wire) => (\r\n                        <WirePresenter key={wire.id.toString()} state={wire} />\r\n                      ))}\r\n                  </>\r\n                );\r\n              })}\r\n\r\n              {state.linkerWire ? (\r\n                <WirePresenter state={state.linkerWire} />\r\n              ) : null}\r\n            </MovingContainer>\r\n          </Container>\r\n        ))\r\n      }\r\n    />\r\n  ));\r\n};\r\n\r\nconst Container = styled.div`\r\n  z-index: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  position: relative;\r\n  background-image: repeating-linear-gradient(\r\n      transparent 0px,\r\n      transparent ${(p) => p.theme.flow.step}px,\r\n      ${(p) => p.theme.flow.border} ${(p) => p.theme.flow.step}px,\r\n      ${(p) => p.theme.flow.border} ${(p) => p.theme.flow.step + 1}px\r\n    ),\r\n    repeating-linear-gradient(\r\n      90deg,\r\n      transparent 0px,\r\n      ${(p) => p.theme.flow.background} ${(p) => p.theme.flow.step}px,\r\n      ${(p) => p.theme.flow.border} ${(p) => p.theme.flow.step}px,\r\n      ${(p) => p.theme.flow.border} ${(p) => p.theme.flow.step + 1}px\r\n    );\r\n`;\r\n\r\nconst MovingContainer = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex: 1;\r\n`;\r\n\r\nconst StrainersWrap = styled.div`\r\n  position: absolute;\r\n  flex: 1;\r\n`;\r\n\r\nconst StrainContainer = styled.div`\r\n  position: absolute;\r\n  display: block;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PlusIcon from \"mdi-react/PlusIcon\";\r\nimport { useStores } from \"../../../Hooks/useStores\";\r\nimport RecordType, { RecordField } from \"../../Models/document/RecordType\";\r\nimport { useObserver } from \"mobx-react-lite\";\r\nimport CardPlusOutlineIcon from \"mdi-react/CardPlusOutlineIcon\";\r\nimport CardOutlineIcon from \"mdi-react/CardOutlineIcon\";\r\nimport ContentSaveIcon from \"mdi-react/ContentSaveIcon\";\r\nimport UUID from \"../../../shared/UUID\";\r\nimport RemoveIcon from \"mdi-react/RemoveIcon\";\r\nimport RecordTypePicker from \"../Menus/RecordTypePicker\";\r\n\r\nexport default function RecordsExplorer(props: any) {\r\n  const { appStore } = useStores();\r\n  const pkg = appStore.currentPackage;\r\n\r\n  function CreateRecord() {\r\n    pkg.records.push({\r\n      buildinRepresentation: \"none\",\r\n      fields: [],\r\n      id: UUID.Generate(),\r\n      color: \"teal\",\r\n      defaultValue: null,\r\n      isRenames: true,\r\n      name: \"new record\",\r\n      editable: true,\r\n    });\r\n  }\r\n\r\n  function CreateField(record: RecordType) {\r\n    record.fields.push({\r\n      name: \"newField\",\r\n      typeID: UUID.Empty,\r\n      id: UUID.Generate(),\r\n      isRenames: true,\r\n    });\r\n  }\r\n\r\n  function RenderRecord(r: RecordType) {\r\n    return (\r\n      <Record key={r.id.toString()}>\r\n        {!r.isRenames ? (\r\n          <RecordTitle onClick={() => (r.isRenames = r.editable && true)}>\r\n            {r.name}\r\n          </RecordTitle>\r\n        ) : (\r\n          <>\r\n            <RecordRenameField\r\n              value={r.name}\r\n              onChange={(ev) => (r.name = ev.target.value)}\r\n            />\r\n            <ContentSaveIcon\r\n              style={{ paddingLeft: 4, cursor: \"pointer\" }}\r\n              onClick={() => (r.isRenames = false)}\r\n              size={18}\r\n            />\r\n          </>\r\n        )}\r\n        {r.editable ? (\r\n          <CardPlusOutlineIcon\r\n            onClick={() => CreateField(r)}\r\n            size={14}\r\n            style={{ color: \"lightgreen\", paddingLeft: 12, cursor: \"pointer\" }}\r\n          />\r\n        ) : null}\r\n      </Record>\r\n    );\r\n  }\r\n\r\n  function RenderField(r: RecordField) {\r\n    return (\r\n      <Field key={r.id.toString()}>\r\n        <CardOutlineIcon\r\n          style={{ color: \"cornflowerblue\", marginRight: 8 }}\r\n          size={16}\r\n        />\r\n        {!r.isRenames ? (\r\n          <>\r\n            <RecordTitle onClick={() => (r.isRenames = true)}>\r\n              {r.name}\r\n            </RecordTitle>\r\n            <div\r\n              style={{\r\n                paddingLeft: 8,\r\n                color: \"cornflowerblue\",\r\n                paddingRight: 8,\r\n              }}\r\n            >\r\n              {\" \"}\r\n              типа{\" \"}\r\n            </div>\r\n            <RecordTypePicker\r\n              recordID={r.typeID}\r\n              recordIDChanged={(type) => (r.typeID = type)}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <RecordRenameField\r\n              value={r.name}\r\n              autoFocus={true}\r\n              onChange={(ev) => (r.name = ev.target.value)}\r\n            />\r\n            <ContentSaveIcon\r\n              style={{ paddingLeft: 4, cursor: \"pointer\" }}\r\n              onClick={() => (r.isRenames = false)}\r\n              size={18}\r\n            />\r\n          </>\r\n        )}\r\n      </Field>\r\n    );\r\n  }\r\n\r\n  return useObserver(() => (\r\n    <>\r\n      <Title>\r\n        Обозреватель записей{\" \"}\r\n        <PlusIcon\r\n          onClick={CreateRecord}\r\n          size={20}\r\n          style={{ color: \"lightgreen\", paddingLeft: 12, cursor: \"pointer\" }}\r\n        />\r\n      </Title>\r\n      <RecordsContainer>\r\n        {pkg.records.map((r) => (\r\n          <RecordGroup>\r\n            {RenderRecord(r)}\r\n            {r.fields.map((f) => RenderField(f))}\r\n          </RecordGroup>\r\n        ))}\r\n        {appStore.loadedPackages.map((p) =>\r\n          p.records.map((r) => (\r\n            <RecordGroup key={r.name + p.name}>\r\n              {RenderRecord(r)}\r\n              {r.fields.map((f) => RenderField(f))}\r\n            </RecordGroup>\r\n          ))\r\n        )}\r\n      </RecordsContainer>\r\n    </>\r\n  ));\r\n}\r\n\r\nconst RecordsContainer = styled.div`\r\n  overflow-y: scroll;\r\n  max-height: 300px;\r\n  height: calc(100% - 40px);\r\n`;\r\n\r\nconst RecordGroup = styled.div`\r\n  border-bottom: 1px solid gray;\r\n`;\r\n\r\nconst Record = styled.div`\r\n  margin: 0 8px;\r\n  padding: 4px 0;\r\n  color: #c9c9c9;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst Field = styled.div`\r\n  margin: 0 8px 0 20px;\r\n  padding: 4px 0;\r\n  color: #c9c9c9;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst RecordTitle = styled.div`\r\n  cursor: text;\r\n`;\r\nconst RecordRenameField = styled.input`\r\n  cursor: text;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  color: gray;\r\n  align-items: center;\r\n  display: flex;\r\n  font-family: Consolas;\r\n  border-bottom: 1px solid #575757;\r\n  padding: 8px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PlusIcon from \"mdi-react/PlusIcon\";\r\nimport { useStores } from \"../../../Hooks/useStores\";\r\nimport RecordType, { RecordField } from \"../../Models/document/RecordType\";\r\nimport { useObserver } from \"mobx-react-lite\";\r\nimport CardPlusOutlineIcon from \"mdi-react/CardPlusOutlineIcon\";\r\nimport CardOutlineIcon from \"mdi-react/CardOutlineIcon\";\r\nimport ContentSaveIcon from \"mdi-react/ContentSaveIcon\";\r\nimport UUID from \"../../../shared/UUID\";\r\nimport RemoveIcon from \"mdi-react/RemoveIcon\";\r\nimport RecordTypePicker from \"../Menus/RecordTypePicker\";\r\n\r\nexport default function FactoriesExplorer(props: any) {\r\n  const { appStore } = useStores();\r\n  const pkg = appStore.currentPackage;\r\n\r\n  function CreateRecord() {\r\n    pkg.records.push({\r\n      buildinRepresentation: \"none\",\r\n      fields: [],\r\n      color: \"teal\",\r\n      defaultValue: null,\r\n      id: UUID.Generate(),\r\n      isRenames: true,\r\n      name: \"new record\",\r\n      editable: true,\r\n    });\r\n  }\r\n\r\n  function CreateField(record: RecordType) {\r\n    record.fields.push({\r\n      name: \"newField\",\r\n      typeID: UUID.Empty,\r\n      id: UUID.Generate(),\r\n      isRenames: true,\r\n    });\r\n  }\r\n\r\n  function RenderRecord(r: RecordType) {\r\n    return (\r\n      <Record key={r.id.toString()}>\r\n        {!r.isRenames ? (\r\n          <RecordTitle onClick={() => (r.isRenames = true)}>\r\n            {r.name}\r\n          </RecordTitle>\r\n        ) : (\r\n          <>\r\n            <RecordRenameField\r\n              value={r.name}\r\n              onChange={(ev) => (r.name = ev.target.value)}\r\n            />\r\n            <ContentSaveIcon\r\n              style={{ paddingLeft: 4, cursor: \"pointer\" }}\r\n              onClick={() => (r.isRenames = false)}\r\n              size={18}\r\n            />\r\n          </>\r\n        )}\r\n        <CardPlusOutlineIcon\r\n          onClick={() => CreateField(r)}\r\n          size={14}\r\n          style={{ color: \"lightgreen\", paddingLeft: 12, cursor: \"pointer\" }}\r\n        />\r\n      </Record>\r\n    );\r\n  }\r\n\r\n  function RenderField(r: RecordField) {\r\n    return (\r\n      <Field key={r.id.toString()}>\r\n        <CardOutlineIcon\r\n          style={{ color: \"cornflowerblue\", marginRight: 8 }}\r\n          size={16}\r\n        />\r\n        {!r.isRenames ? (\r\n          <>\r\n            <RecordTitle onClick={() => (r.isRenames = true)}>\r\n              {r.name}\r\n            </RecordTitle>\r\n            <RecordTypePicker\r\n              recordID={r.typeID}\r\n              recordIDChanged={(type) => (r.typeID = type)}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <RecordRenameField\r\n              value={r.name}\r\n              autoFocus={true}\r\n              onChange={(ev) => (r.name = ev.target.value)}\r\n            />\r\n            <ContentSaveIcon\r\n              style={{ paddingLeft: 4, cursor: \"pointer\" }}\r\n              onClick={() => (r.isRenames = false)}\r\n              size={18}\r\n            />\r\n          </>\r\n        )}\r\n      </Field>\r\n    );\r\n  }\r\n\r\n  return useObserver(() => (\r\n    <>\r\n      <Title>\r\n        Обозреватель фабрик{\" \"}\r\n        <PlusIcon\r\n          onClick={CreateRecord}\r\n          size={20}\r\n          style={{ color: \"lightgreen\", paddingLeft: 12, cursor: \"pointer\" }}\r\n        />\r\n      </Title>\r\n      {/*  {appStore.recordsRepo.map(r => (\r\n        <RecordGroup>\r\n          {RenderRecord(r)}\r\n          {r.fields.map(f => RenderField(f))}\r\n        </RecordGroup>\r\n      ))}*/}\r\n    </>\r\n  ));\r\n}\r\n\r\nconst RecordGroup = styled.div`\r\n  border-bottom: 1px solid gray;\r\n`;\r\n\r\nconst Record = styled.div`\r\n  margin: 0 8px;\r\n  padding: 4px 0;\r\n  color: #c9c9c9;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst Field = styled.div`\r\n  margin: 0 8px 0 20px;\r\n  padding: 4px 0;\r\n  color: #c9c9c9;\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst RecordTitle = styled.div`\r\n  cursor: text;\r\n`;\r\nconst RecordRenameField = styled.input`\r\n  cursor: text;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  min-height: 300px;\r\n  border: 1px solid gray;\r\n`;\r\nconst Title = styled.div`\r\n  color: gray;\r\n  align-items: center;\r\n  display: flex;\r\n  font-family: Consolas;\r\n  border-bottom: 1px dotted #575757;\r\n  padding: 8px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport { stores } from \"../../../AppRoot/App\";\r\n\r\nexport default function(props: {}) {\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n      <MenuEntry\r\n        onClick={() => {\r\n          stores.appStore.save();\r\n        }}\r\n      >\r\n        save\r\n      </MenuEntry>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst MenuEntry = styled.div`\r\n  border: 1px gray solid;\r\n  display: flex;\r\n  color: white;\r\n  cursor: pointer;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n","import React from \"react\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport { useObserver } from \"mobx-react-lite\";\r\nimport { useStores } from \"../Hooks/useStores\";\r\nimport makeInspectable from \"mobx-devtools-mst\";\r\nimport AppStore from \"./stores/AppStore\";\r\n\r\nimport \"./global.css\";\r\nimport ThemeStore from \"./stores/ThemeStore\";\r\nimport FactoryPresenter from \"../App/Presenters/Factory/FactoryPresenter\";\r\nimport RecordsExplorer from \"../App/Components/BottomMenu/RecordsExplorer\";\r\nimport FactoriesExplorer from \"../App/Components/BottomMenu/FactoriesExplorer\";\r\nimport MainMenu from \"../App/Components/Menus/MainMenu\";\r\n\r\nexport const stores = {\r\n  themeStore: new ThemeStore(),\r\n  appStore: new AppStore(),\r\n};\r\nfor (const store in stores) {\r\n  // @ts-ignore\r\n  makeInspectable(stores[store]);\r\n}\r\nexport const storesContext = React.createContext(stores);\r\n\r\nexport default function App() {\r\n  const { themeStore, appStore } = useStores();\r\n  appStore.initValues();\r\n  appStore.initDefaultPackages();\r\n\r\n  return useObserver(() => (\r\n    <ThemeProvider theme={themeStore.currentTheme}>\r\n      <AppContainer>\r\n        <FactoryPresenter state={appStore.currentFactory} />\r\n        <BottomPanel>\r\n        {/*   <MenuContainer>\r\n            <MainMenu />\r\n          </MenuContainer> */}\r\n          <PanelContainer>\r\n            <RecordsExplorer />\r\n          </PanelContainer>\r\n         {/*  <PanelContainer>\r\n            <FactoriesExplorer />\r\n          </PanelContainer> */}\r\n        </BottomPanel>\r\n      </AppContainer>\r\n    </ThemeProvider>\r\n  ));\r\n}\r\n\r\nconst PanelContainer = styled.div`\r\n  min-height: 300px;\r\n  flex-grow: 1;\r\n  border: 1px solid #525252;\r\n`;\r\nconst MenuContainer = styled.div`\r\n  width: 40px;\r\n  height: 100%;\r\n`;\r\n\r\nconst BottomPanel = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst AppContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${(p) => p.theme.flow.background};\r\n`;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                    'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n\r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n\r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {'Service-Worker': 'script'}\r\n  })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n            response.status === 404 ||\r\n            (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n            'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './AppRoot/App';\r\nimport * as serviceWorker from './Development/serviceWorker';\r\n\r\nwindow.addEventListener(\"gamepadconnected\", function (e) {\r\n    console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n        e.gamepad.index, e.gamepad.id,\r\n        e.gamepad.buttons.length, e.gamepad.axes.length);\r\n});\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}